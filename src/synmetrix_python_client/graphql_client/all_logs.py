# Generated by ariadne-codegen
# Source: src/synmetrix_python_client/graphql

from typing import List, Optional

from .base_model import BaseModel
from .fragments import DefaultFields


class AllLogs(BaseModel):
    request_logs: List["AllLogsRequestLogs"]
    request_logs_aggregate: "AllLogsRequestLogsAggregate"


class AllLogsRequestLogs(DefaultFields):
    request_event_logs_aggregate: "AllLogsRequestLogsRequestEventLogsAggregate"


class AllLogsRequestLogsRequestEventLogsAggregate(BaseModel):
    aggregate: Optional["AllLogsRequestLogsRequestEventLogsAggregateAggregate"]


class AllLogsRequestLogsRequestEventLogsAggregateAggregate(BaseModel):
    count: int


class AllLogsRequestLogsAggregate(BaseModel):
    aggregate: Optional["AllLogsRequestLogsAggregateAggregate"]


class AllLogsRequestLogsAggregateAggregate(BaseModel):
    count: int


AllLogs.model_rebuild()
AllLogsRequestLogs.model_rebuild()
AllLogsRequestLogsRequestEventLogsAggregate.model_rebuild()
AllLogsRequestLogsAggregate.model_rebuild()
