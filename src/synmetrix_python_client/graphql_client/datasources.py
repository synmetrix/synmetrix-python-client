# Generated by ariadne-codegen
# Source: src/synmetrix_python_client/graphql

from typing import Any, List, Optional

from .base_model import BaseModel


class Datasources(BaseModel):
    datasources: List["DatasourcesDatasources"]
    datasources_aggregate: "DatasourcesDatasourcesAggregate"


class DatasourcesDatasources(BaseModel):
    id: Any
    name: str
    db_params_computed: Optional[Any]
    db_type: str
    created_at: Any
    updated_at: Any
    branches: List["DatasourcesDatasourcesBranches"]
    sql_credentials: List["DatasourcesDatasourcesSqlCredentials"]


class DatasourcesDatasourcesBranches(BaseModel):
    id: Any


class DatasourcesDatasourcesSqlCredentials(BaseModel):
    id: Any
    username: str
    created_at: Any
    updated_at: Any
    user: "DatasourcesDatasourcesSqlCredentialsUser"


class DatasourcesDatasourcesSqlCredentialsUser(BaseModel):
    id: Any
    display_name: Optional[str]


class DatasourcesDatasourcesAggregate(BaseModel):
    aggregate: Optional["DatasourcesDatasourcesAggregateAggregate"]


class DatasourcesDatasourcesAggregateAggregate(BaseModel):
    count: int


Datasources.model_rebuild()
DatasourcesDatasources.model_rebuild()
DatasourcesDatasourcesSqlCredentials.model_rebuild()
DatasourcesDatasourcesAggregate.model_rebuild()
