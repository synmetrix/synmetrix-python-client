# Generated by ariadne-codegen
# Source: src/synmetrix_python_client/graphql

from typing import Any, List, Optional

from .base_model import BaseModel


class VersionByBranchId(BaseModel):
    versions: List["VersionByBranchIdVersions"]
    versions_aggregate: "VersionByBranchIdVersionsAggregate"


class VersionByBranchIdVersions(BaseModel):
    id: Any
    checksum: str
    updated_at: Any
    created_at: Any
    user: "VersionByBranchIdVersionsUser"
    dataschemas: List["VersionByBranchIdVersionsDataschemas"]


class VersionByBranchIdVersionsUser(BaseModel):
    display_name: Optional[str]


class VersionByBranchIdVersionsDataschemas(BaseModel):
    created_at: Any
    updated_at: Any
    datasource_id: Any
    id: Any
    user_id: Any
    name: str
    code: str
    checksum: Optional[str]


class VersionByBranchIdVersionsAggregate(BaseModel):
    aggregate: Optional["VersionByBranchIdVersionsAggregateAggregate"]


class VersionByBranchIdVersionsAggregateAggregate(BaseModel):
    count: int


VersionByBranchId.model_rebuild()
VersionByBranchIdVersions.model_rebuild()
VersionByBranchIdVersionsAggregate.model_rebuild()
