# Generated by ariadne-codegen
# Source: http://localhost/v1/graphql

from enum import Enum


class access_lists_constraint(str, Enum):
    access_lists_pkey = "access_lists_pkey"


class access_lists_select_column(str, Enum):
    config = "config"
    created_at = "created_at"
    id = "id"
    name = "name"
    team_id = "team_id"
    updated_at = "updated_at"


class access_lists_update_column(str, Enum):
    config = "config"
    created_at = "created_at"
    id = "id"
    name = "name"
    team_id = "team_id"
    updated_at = "updated_at"


class alerts_constraint(str, Enum):
    alerts_pkey = "alerts_pkey"


class alerts_select_column(str, Enum):
    created_at = "created_at"
    delivery_config = "delivery_config"
    delivery_type = "delivery_type"
    exploration_id = "exploration_id"
    id = "id"
    locks_config = "locks_config"
    name = "name"
    schedule = "schedule"
    team_id = "team_id"
    trigger_config = "trigger_config"
    updated_at = "updated_at"
    user_id = "user_id"


class alerts_update_column(str, Enum):
    created_at = "created_at"
    delivery_config = "delivery_config"
    delivery_type = "delivery_type"
    exploration_id = "exploration_id"
    id = "id"
    locks_config = "locks_config"
    name = "name"
    schedule = "schedule"
    team_id = "team_id"
    trigger_config = "trigger_config"
    updated_at = "updated_at"
    user_id = "user_id"


class auth_account_providers_constraint(str, Enum):
    account_providers_account_id_auth_provider_key = (
        "account_providers_account_id_auth_provider_key"
    )
    account_providers_auth_provider_auth_provider_unique_id_key = (
        "account_providers_auth_provider_auth_provider_unique_id_key"
    )
    account_providers_pkey = "account_providers_pkey"


class auth_account_providers_select_column(str, Enum):
    account_id = "account_id"
    auth_provider = "auth_provider"
    auth_provider_unique_id = "auth_provider_unique_id"
    created_at = "created_at"
    id = "id"
    updated_at = "updated_at"


class auth_account_providers_update_column(str, Enum):
    account_id = "account_id"
    auth_provider = "auth_provider"
    auth_provider_unique_id = "auth_provider_unique_id"
    created_at = "created_at"
    id = "id"
    updated_at = "updated_at"


class auth_account_roles_constraint(str, Enum):
    account_roles_pkey = "account_roles_pkey"
    user_roles_account_id_role_key = "user_roles_account_id_role_key"


class auth_account_roles_select_column(str, Enum):
    account_id = "account_id"
    created_at = "created_at"
    id = "id"
    role = "role"


class auth_account_roles_update_column(str, Enum):
    account_id = "account_id"
    created_at = "created_at"
    id = "id"
    role = "role"


class auth_accounts_constraint(str, Enum):
    accounts_email_key = "accounts_email_key"
    accounts_new_email_key = "accounts_new_email_key"
    accounts_pkey = "accounts_pkey"
    accounts_user_id_key = "accounts_user_id_key"


class auth_accounts_select_column(str, Enum):
    active = "active"
    created_at = "created_at"
    custom_register_data = "custom_register_data"
    default_role = "default_role"
    email = "email"
    id = "id"
    is_anonymous = "is_anonymous"
    mfa_enabled = "mfa_enabled"
    new_email = "new_email"
    otp_secret = "otp_secret"
    password_hash = "password_hash"
    ticket = "ticket"
    ticket_expires_at = "ticket_expires_at"
    updated_at = "updated_at"
    user_id = "user_id"


class auth_accounts_select_column_auth_accounts_aggregate_bool_exp_bool_and_arguments_columns(
    str, Enum
):
    active = "active"
    is_anonymous = "is_anonymous"
    mfa_enabled = "mfa_enabled"


class auth_accounts_select_column_auth_accounts_aggregate_bool_exp_bool_or_arguments_columns(
    str, Enum
):
    active = "active"
    is_anonymous = "is_anonymous"
    mfa_enabled = "mfa_enabled"


class auth_accounts_update_column(str, Enum):
    active = "active"
    created_at = "created_at"
    custom_register_data = "custom_register_data"
    default_role = "default_role"
    email = "email"
    id = "id"
    is_anonymous = "is_anonymous"
    mfa_enabled = "mfa_enabled"
    new_email = "new_email"
    otp_secret = "otp_secret"
    password_hash = "password_hash"
    ticket = "ticket"
    ticket_expires_at = "ticket_expires_at"
    updated_at = "updated_at"
    user_id = "user_id"


class auth_providers_constraint(str, Enum):
    providers_pkey = "providers_pkey"


class auth_providers_select_column(str, Enum):
    provider = "provider"


class auth_providers_update_column(str, Enum):
    provider = "provider"


class auth_refresh_tokens_constraint(str, Enum):
    refresh_tokens_pkey = "refresh_tokens_pkey"


class auth_refresh_tokens_select_column(str, Enum):
    account_id = "account_id"
    created_at = "created_at"
    expires_at = "expires_at"
    refresh_token = "refresh_token"


class auth_refresh_tokens_update_column(str, Enum):
    account_id = "account_id"
    created_at = "created_at"
    expires_at = "expires_at"
    refresh_token = "refresh_token"


class auth_roles_constraint(str, Enum):
    roles_pkey = "roles_pkey"


class auth_roles_select_column(str, Enum):
    role = "role"


class auth_roles_update_column(str, Enum):
    role = "role"


class branch_statuses_constraint(str, Enum):
    branch_statuses_pkey = "branch_statuses_pkey"


class branch_statuses_enum(str, Enum):
    active = "active"
    archived = "archived"
    created = "created"


class branch_statuses_select_column(str, Enum):
    status = "status"


class branch_statuses_update_column(str, Enum):
    status = "status"


class branches_constraint(str, Enum):
    branches_datasource_id_name_key = "branches_datasource_id_name_key"
    branches_pkey = "branches_pkey"


class branches_select_column(str, Enum):
    created_at = "created_at"
    datasource_id = "datasource_id"
    id = "id"
    name = "name"
    status = "status"
    updated_at = "updated_at"
    user_id = "user_id"


class branches_update_column(str, Enum):
    created_at = "created_at"
    datasource_id = "datasource_id"
    id = "id"
    name = "name"
    status = "status"
    updated_at = "updated_at"
    user_id = "user_id"


class cursor_ordering(str, Enum):
    ASC = "ASC"
    DESC = "DESC"


class dashboards_constraint(str, Enum):
    dashboards_pkey = "dashboards_pkey"


class dashboards_select_column(str, Enum):
    created_at = "created_at"
    id = "id"
    layout = "layout"
    name = "name"
    team_id = "team_id"
    updated_at = "updated_at"
    user_id = "user_id"


class dashboards_update_column(str, Enum):
    created_at = "created_at"
    id = "id"
    layout = "layout"
    name = "name"
    team_id = "team_id"
    updated_at = "updated_at"
    user_id = "user_id"


class dataschemas_constraint(str, Enum):
    dataschemas_pkey = "dataschemas_pkey"


class dataschemas_select_column(str, Enum):
    checksum = "checksum"
    code = "code"
    created_at = "created_at"
    datasource_id = "datasource_id"
    id = "id"
    name = "name"
    updated_at = "updated_at"
    user_id = "user_id"
    version_id = "version_id"


class dataschemas_update_column(str, Enum):
    checksum = "checksum"
    code = "code"
    created_at = "created_at"
    datasource_id = "datasource_id"
    id = "id"
    name = "name"
    updated_at = "updated_at"
    user_id = "user_id"
    version_id = "version_id"


class datasources_constraint(str, Enum):
    datasources_pkey = "datasources_pkey"


class datasources_select_column(str, Enum):
    created_at = "created_at"
    db_params = "db_params"
    db_type = "db_type"
    id = "id"
    name = "name"
    team_id = "team_id"
    updated_at = "updated_at"
    user_id = "user_id"


class datasources_update_column(str, Enum):
    created_at = "created_at"
    db_params = "db_params"
    db_type = "db_type"
    id = "id"
    name = "name"
    team_id = "team_id"
    updated_at = "updated_at"
    user_id = "user_id"


class events_constraint(str, Enum):
    events_pkey = "events_pkey"


class events_select_column(str, Enum):
    created_at = "created_at"
    data = "data"
    device_context = "device_context"
    id = "id"
    page_context = "page_context"
    updated_at = "updated_at"
    user = "user"


class events_update_column(str, Enum):
    created_at = "created_at"
    data = "data"
    device_context = "device_context"
    id = "id"
    page_context = "page_context"
    updated_at = "updated_at"
    user = "user"


class explorations_constraint(str, Enum):
    explorations_pkey = "explorations_pkey"


class explorations_select_column(str, Enum):
    branch_id = "branch_id"
    created_at = "created_at"
    datasource_id = "datasource_id"
    id = "id"
    playground_settings = "playground_settings"
    playground_state = "playground_state"
    updated_at = "updated_at"
    user_id = "user_id"


class explorations_update_column(str, Enum):
    branch_id = "branch_id"
    created_at = "created_at"
    datasource_id = "datasource_id"
    id = "id"
    playground_settings = "playground_settings"
    playground_state = "playground_state"
    updated_at = "updated_at"
    user_id = "user_id"


class member_roles_constraint(str, Enum):
    member_roles_member_id_team_role_key = "member_roles_member_id_team_role_key"
    member_roles_pkey = "member_roles_pkey"


class member_roles_select_column(str, Enum):
    access_list_id = "access_list_id"
    created_at = "created_at"
    id = "id"
    member_id = "member_id"
    team_role = "team_role"
    updated_at = "updated_at"


class member_roles_update_column(str, Enum):
    access_list_id = "access_list_id"
    created_at = "created_at"
    id = "id"
    member_id = "member_id"
    team_role = "team_role"
    updated_at = "updated_at"


class members_constraint(str, Enum):
    members_pkey = "members_pkey"
    members_user_id_team_id_key = "members_user_id_team_id_key"


class members_select_column(str, Enum):
    created_at = "created_at"
    id = "id"
    team_id = "team_id"
    updated_at = "updated_at"
    user_id = "user_id"


class members_update_column(str, Enum):
    created_at = "created_at"
    id = "id"
    team_id = "team_id"
    updated_at = "updated_at"
    user_id = "user_id"


class order_by(str, Enum):
    asc = "asc"
    asc_nulls_first = "asc_nulls_first"
    asc_nulls_last = "asc_nulls_last"
    desc = "desc"
    desc_nulls_first = "desc_nulls_first"
    desc_nulls_last = "desc_nulls_last"


class pinned_items_constraint(str, Enum):
    pinned_items_pkey = "pinned_items_pkey"


class pinned_items_select_column(str, Enum):
    created_at = "created_at"
    dashboard_id = "dashboard_id"
    exploration_id = "exploration_id"
    id = "id"
    name = "name"
    spec = "spec"
    spec_config = "spec_config"
    updated_at = "updated_at"
    user_id = "user_id"


class pinned_items_update_column(str, Enum):
    created_at = "created_at"
    dashboard_id = "dashboard_id"
    exploration_id = "exploration_id"
    id = "id"
    name = "name"
    spec = "spec"
    spec_config = "spec_config"
    updated_at = "updated_at"
    user_id = "user_id"


class reports_constraint(str, Enum):
    reports_pkey = "reports_pkey"


class reports_select_column(str, Enum):
    created_at = "created_at"
    delivery_config = "delivery_config"
    delivery_type = "delivery_type"
    exploration_id = "exploration_id"
    id = "id"
    name = "name"
    schedule = "schedule"
    team_id = "team_id"
    updated_at = "updated_at"
    user_id = "user_id"


class reports_update_column(str, Enum):
    created_at = "created_at"
    delivery_config = "delivery_config"
    delivery_type = "delivery_type"
    exploration_id = "exploration_id"
    id = "id"
    name = "name"
    schedule = "schedule"
    team_id = "team_id"
    updated_at = "updated_at"
    user_id = "user_id"


class request_event_logs_constraint(str, Enum):
    request_event_logs_pkey = "request_event_logs_pkey"


class request_event_logs_select_column(str, Enum):
    created_at = "created_at"
    duration = "duration"
    error = "error"
    event = "event"
    id = "id"
    path = "path"
    query = "query"
    query_key = "query_key"
    query_key_md5 = "query_key_md5"
    query_sql = "query_sql"
    queue_prefix = "queue_prefix"
    request_id = "request_id"
    time_in_queue = "time_in_queue"
    timestamp = "timestamp"
    updated_at = "updated_at"


class request_event_logs_update_column(str, Enum):
    created_at = "created_at"
    duration = "duration"
    error = "error"
    event = "event"
    id = "id"
    path = "path"
    query = "query"
    query_key = "query_key"
    query_key_md5 = "query_key_md5"
    query_sql = "query_sql"
    queue_prefix = "queue_prefix"
    request_id = "request_id"
    time_in_queue = "time_in_queue"
    timestamp = "timestamp"
    updated_at = "updated_at"


class request_logs_constraint(str, Enum):
    request_logs_pkey = "request_logs_pkey"
    request_logs_request_id_key = "request_logs_request_id_key"


class request_logs_select_column(str, Enum):
    created_at = "created_at"
    datasource_id = "datasource_id"
    end_time = "end_time"
    id = "id"
    path = "path"
    request_id = "request_id"
    start_time = "start_time"
    updated_at = "updated_at"
    user_id = "user_id"


class request_logs_update_column(str, Enum):
    created_at = "created_at"
    datasource_id = "datasource_id"
    end_time = "end_time"
    id = "id"
    path = "path"
    request_id = "request_id"
    start_time = "start_time"
    updated_at = "updated_at"
    user_id = "user_id"


class sql_credentials_constraint(str, Enum):
    sql_credentials_datasource_id_user_id_username_key = (
        "sql_credentials_datasource_id_user_id_username_key"
    )
    sql_credentials_pkey = "sql_credentials_pkey"
    sql_credentials_username_key = "sql_credentials_username_key"


class sql_credentials_select_column(str, Enum):
    created_at = "created_at"
    datasource_id = "datasource_id"
    id = "id"
    password = "password"
    updated_at = "updated_at"
    user_id = "user_id"
    username = "username"


class sql_credentials_update_column(str, Enum):
    created_at = "created_at"
    datasource_id = "datasource_id"
    id = "id"
    password = "password"
    updated_at = "updated_at"
    user_id = "user_id"
    username = "username"


class team_roles_constraint(str, Enum):
    team_roles_pkey = "team_roles_pkey"


class team_roles_enum(str, Enum):
    admin = "admin"
    member = "member"
    owner = "owner"


class team_roles_select_column(str, Enum):
    name = "name"


class team_roles_update_column(str, Enum):
    name = "name"


class teams_constraint(str, Enum):
    teams_pkey = "teams_pkey"
    teams_user_id_name_key = "teams_user_id_name_key"


class teams_select_column(str, Enum):
    created_at = "created_at"
    id = "id"
    name = "name"
    updated_at = "updated_at"
    user_id = "user_id"


class teams_update_column(str, Enum):
    created_at = "created_at"
    id = "id"
    name = "name"
    updated_at = "updated_at"
    user_id = "user_id"


class users_constraint(str, Enum):
    users_pkey = "users_pkey"


class users_select_column(str, Enum):
    avatar_url = "avatar_url"
    created_at = "created_at"
    display_name = "display_name"
    id = "id"
    updated_at = "updated_at"


class users_update_column(str, Enum):
    avatar_url = "avatar_url"
    created_at = "created_at"
    display_name = "display_name"
    id = "id"
    updated_at = "updated_at"


class versions_constraint(str, Enum):
    versions_pkey = "versions_pkey"


class versions_select_column(str, Enum):
    branch_id = "branch_id"
    checksum = "checksum"
    created_at = "created_at"
    id = "id"
    markdown_doc = "markdown_doc"
    updated_at = "updated_at"
    user_id = "user_id"


class versions_update_column(str, Enum):
    branch_id = "branch_id"
    checksum = "checksum"
    created_at = "created_at"
    id = "id"
    markdown_doc = "markdown_doc"
    updated_at = "updated_at"
    user_id = "user_id"
