# Generated by ariadne-codegen
# Source: http://localhost/v1/graphql

from typing import Any, List, Optional

from pydantic import Field

from .base_model import BaseModel
from .enums import (
    access_lists_constraint,
    access_lists_select_column,
    access_lists_update_column,
    alerts_constraint,
    alerts_select_column,
    alerts_update_column,
    auth_account_providers_constraint,
    auth_account_providers_select_column,
    auth_account_providers_update_column,
    auth_account_roles_constraint,
    auth_account_roles_select_column,
    auth_account_roles_update_column,
    auth_accounts_constraint,
    auth_accounts_select_column,
    auth_accounts_select_column_auth_accounts_aggregate_bool_exp_bool_and_arguments_columns,
    auth_accounts_select_column_auth_accounts_aggregate_bool_exp_bool_or_arguments_columns,
    auth_accounts_update_column,
    auth_providers_constraint,
    auth_providers_update_column,
    auth_refresh_tokens_constraint,
    auth_refresh_tokens_select_column,
    auth_refresh_tokens_update_column,
    auth_roles_constraint,
    auth_roles_update_column,
    branch_statuses_constraint,
    branch_statuses_enum,
    branch_statuses_update_column,
    branches_constraint,
    branches_select_column,
    branches_update_column,
    cursor_ordering,
    dashboards_constraint,
    dashboards_select_column,
    dashboards_update_column,
    dataschemas_constraint,
    dataschemas_select_column,
    dataschemas_update_column,
    datasources_constraint,
    datasources_select_column,
    datasources_update_column,
    events_constraint,
    events_update_column,
    explorations_constraint,
    explorations_select_column,
    explorations_update_column,
    member_roles_constraint,
    member_roles_select_column,
    member_roles_update_column,
    members_constraint,
    members_select_column,
    members_update_column,
    order_by,
    pinned_items_constraint,
    pinned_items_select_column,
    pinned_items_update_column,
    reports_constraint,
    reports_select_column,
    reports_update_column,
    request_event_logs_constraint,
    request_event_logs_select_column,
    request_event_logs_update_column,
    request_logs_constraint,
    request_logs_select_column,
    request_logs_update_column,
    sql_credentials_constraint,
    sql_credentials_select_column,
    sql_credentials_update_column,
    team_roles_constraint,
    team_roles_enum,
    team_roles_update_column,
    teams_constraint,
    teams_select_column,
    teams_update_column,
    users_constraint,
    users_update_column,
    versions_constraint,
    versions_select_column,
    versions_update_column,
)


class Boolean_comparison_exp(BaseModel):
    eq: Optional[bool] = Field(alias="_eq", default=None)
    gt: Optional[bool] = Field(alias="_gt", default=None)
    gte: Optional[bool] = Field(alias="_gte", default=None)
    in_: Optional[List[bool]] = Field(alias="_in", default=None)
    is_null: Optional[bool] = Field(alias="_is_null", default=None)
    lt: Optional[bool] = Field(alias="_lt", default=None)
    lte: Optional[bool] = Field(alias="_lte", default=None)
    neq: Optional[bool] = Field(alias="_neq", default=None)
    nin: Optional[List[bool]] = Field(alias="_nin", default=None)


class Int_comparison_exp(BaseModel):
    eq: Optional[int] = Field(alias="_eq", default=None)
    gt: Optional[int] = Field(alias="_gt", default=None)
    gte: Optional[int] = Field(alias="_gte", default=None)
    in_: Optional[List[int]] = Field(alias="_in", default=None)
    is_null: Optional[bool] = Field(alias="_is_null", default=None)
    lt: Optional[int] = Field(alias="_lt", default=None)
    lte: Optional[int] = Field(alias="_lte", default=None)
    neq: Optional[int] = Field(alias="_neq", default=None)
    nin: Optional[List[int]] = Field(alias="_nin", default=None)


class SourceTable(BaseModel):
    name: str


class String_comparison_exp(BaseModel):
    eq: Optional[str] = Field(alias="_eq", default=None)
    gt: Optional[str] = Field(alias="_gt", default=None)
    gte: Optional[str] = Field(alias="_gte", default=None)
    ilike: Optional[str] = Field(alias="_ilike", default=None)
    in_: Optional[List[str]] = Field(alias="_in", default=None)
    iregex: Optional[str] = Field(alias="_iregex", default=None)
    is_null: Optional[bool] = Field(alias="_is_null", default=None)
    like: Optional[str] = Field(alias="_like", default=None)
    lt: Optional[str] = Field(alias="_lt", default=None)
    lte: Optional[str] = Field(alias="_lte", default=None)
    neq: Optional[str] = Field(alias="_neq", default=None)
    nilike: Optional[str] = Field(alias="_nilike", default=None)
    nin: Optional[List[str]] = Field(alias="_nin", default=None)
    niregex: Optional[str] = Field(alias="_niregex", default=None)
    nlike: Optional[str] = Field(alias="_nlike", default=None)
    nregex: Optional[str] = Field(alias="_nregex", default=None)
    nsimilar: Optional[str] = Field(alias="_nsimilar", default=None)
    regex: Optional[str] = Field(alias="_regex", default=None)
    similar: Optional[str] = Field(alias="_similar", default=None)


class access_lists_aggregate_bool_exp(BaseModel):
    count: Optional["access_lists_aggregate_bool_exp_count"] = None


class access_lists_aggregate_bool_exp_count(BaseModel):
    arguments: Optional[List[access_lists_select_column]] = None
    distinct: Optional[bool] = None
    filter: Optional["access_lists_bool_exp"] = None
    predicate: "Int_comparison_exp"


class access_lists_aggregate_order_by(BaseModel):
    count: Optional[order_by] = None
    max: Optional["access_lists_max_order_by"] = None
    min: Optional["access_lists_min_order_by"] = None


class access_lists_append_input(BaseModel):
    config: Optional[Any] = None


class access_lists_arr_rel_insert_input(BaseModel):
    data: List["access_lists_insert_input"]
    on_conflict: Optional["access_lists_on_conflict"] = None


class access_lists_bool_exp(BaseModel):
    and_: Optional[List["access_lists_bool_exp"]] = Field(alias="_and", default=None)
    not_: Optional["access_lists_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["access_lists_bool_exp"]] = Field(alias="_or", default=None)
    config: Optional["jsonb_comparison_exp"] = None
    created_at: Optional["timestamptz_comparison_exp"] = None
    id: Optional["uuid_comparison_exp"] = None
    member_roles: Optional["member_roles_bool_exp"] = None
    member_roles_aggregate: Optional["member_roles_aggregate_bool_exp"] = None
    name: Optional["String_comparison_exp"] = None
    team: Optional["teams_bool_exp"] = None
    team_id: Optional["uuid_comparison_exp"] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None


class access_lists_delete_at_path_input(BaseModel):
    config: Optional[List[str]] = None


class access_lists_delete_elem_input(BaseModel):
    config: Optional[int] = None


class access_lists_delete_key_input(BaseModel):
    config: Optional[str] = None


class access_lists_insert_input(BaseModel):
    config: Optional[Any] = None
    created_at: Optional[Any] = None
    id: Optional[Any] = None
    member_roles: Optional["member_roles_arr_rel_insert_input"] = None
    name: Optional[str] = None
    team: Optional["teams_obj_rel_insert_input"] = None
    team_id: Optional[Any] = None
    updated_at: Optional[Any] = None


class access_lists_max_order_by(BaseModel):
    created_at: Optional[order_by] = None
    id: Optional[order_by] = None
    name: Optional[order_by] = None
    team_id: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class access_lists_min_order_by(BaseModel):
    created_at: Optional[order_by] = None
    id: Optional[order_by] = None
    name: Optional[order_by] = None
    team_id: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class access_lists_obj_rel_insert_input(BaseModel):
    data: "access_lists_insert_input"
    on_conflict: Optional["access_lists_on_conflict"] = None


class access_lists_on_conflict(BaseModel):
    constraint: access_lists_constraint
    update_columns: List[access_lists_update_column]
    where: Optional["access_lists_bool_exp"] = None


class access_lists_order_by(BaseModel):
    config: Optional[order_by] = None
    created_at: Optional[order_by] = None
    id: Optional[order_by] = None
    member_roles_aggregate: Optional["member_roles_aggregate_order_by"] = None
    name: Optional[order_by] = None
    team: Optional["teams_order_by"] = None
    team_id: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class access_lists_pk_columns_input(BaseModel):
    id: Any


class access_lists_prepend_input(BaseModel):
    config: Optional[Any] = None


class access_lists_set_input(BaseModel):
    config: Optional[Any] = None
    created_at: Optional[Any] = None
    id: Optional[Any] = None
    name: Optional[str] = None
    team_id: Optional[Any] = None
    updated_at: Optional[Any] = None


class access_lists_stream_cursor_input(BaseModel):
    initial_value: "access_lists_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class access_lists_stream_cursor_value_input(BaseModel):
    config: Optional[Any] = None
    created_at: Optional[Any] = None
    id: Optional[Any] = None
    name: Optional[str] = None
    team_id: Optional[Any] = None
    updated_at: Optional[Any] = None


class access_lists_updates(BaseModel):
    append: Optional["access_lists_append_input"] = Field(alias="_append", default=None)
    delete_at_path: Optional["access_lists_delete_at_path_input"] = Field(
        alias="_delete_at_path", default=None
    )
    delete_elem: Optional["access_lists_delete_elem_input"] = Field(
        alias="_delete_elem", default=None
    )
    delete_key: Optional["access_lists_delete_key_input"] = Field(
        alias="_delete_key", default=None
    )
    prepend: Optional["access_lists_prepend_input"] = Field(
        alias="_prepend", default=None
    )
    set: Optional["access_lists_set_input"] = Field(alias="_set", default=None)
    where: "access_lists_bool_exp"


class alerts_aggregate_bool_exp(BaseModel):
    count: Optional["alerts_aggregate_bool_exp_count"] = None


class alerts_aggregate_bool_exp_count(BaseModel):
    arguments: Optional[List[alerts_select_column]] = None
    distinct: Optional[bool] = None
    filter: Optional["alerts_bool_exp"] = None
    predicate: "Int_comparison_exp"


class alerts_aggregate_order_by(BaseModel):
    count: Optional[order_by] = None
    max: Optional["alerts_max_order_by"] = None
    min: Optional["alerts_min_order_by"] = None


class alerts_append_input(BaseModel):
    delivery_config: Optional[Any] = None
    locks_config: Optional[Any] = None
    trigger_config: Optional[Any] = None


class alerts_arr_rel_insert_input(BaseModel):
    data: List["alerts_insert_input"]
    on_conflict: Optional["alerts_on_conflict"] = None


class alerts_bool_exp(BaseModel):
    and_: Optional[List["alerts_bool_exp"]] = Field(alias="_and", default=None)
    not_: Optional["alerts_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["alerts_bool_exp"]] = Field(alias="_or", default=None)
    created_at: Optional["timestamptz_comparison_exp"] = None
    delivery_config: Optional["jsonb_comparison_exp"] = None
    delivery_type: Optional["String_comparison_exp"] = None
    exploration: Optional["explorations_bool_exp"] = None
    exploration_id: Optional["uuid_comparison_exp"] = None
    id: Optional["uuid_comparison_exp"] = None
    locks_config: Optional["jsonb_comparison_exp"] = None
    name: Optional["String_comparison_exp"] = None
    schedule: Optional["String_comparison_exp"] = None
    team: Optional["teams_bool_exp"] = None
    team_id: Optional["uuid_comparison_exp"] = None
    trigger_config: Optional["jsonb_comparison_exp"] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None
    user: Optional["users_bool_exp"] = None
    user_id: Optional["uuid_comparison_exp"] = None


class alerts_delete_at_path_input(BaseModel):
    delivery_config: Optional[List[str]] = None
    locks_config: Optional[List[str]] = None
    trigger_config: Optional[List[str]] = None


class alerts_delete_elem_input(BaseModel):
    delivery_config: Optional[int] = None
    locks_config: Optional[int] = None
    trigger_config: Optional[int] = None


class alerts_delete_key_input(BaseModel):
    delivery_config: Optional[str] = None
    locks_config: Optional[str] = None
    trigger_config: Optional[str] = None


class alerts_insert_input(BaseModel):
    created_at: Optional[Any] = None
    delivery_config: Optional[Any] = None
    delivery_type: Optional[str] = None
    exploration: Optional["explorations_obj_rel_insert_input"] = None
    exploration_id: Optional[Any] = None
    id: Optional[Any] = None
    locks_config: Optional[Any] = None
    name: Optional[str] = None
    schedule: Optional[str] = None
    team: Optional["teams_obj_rel_insert_input"] = None
    team_id: Optional[Any] = None
    trigger_config: Optional[Any] = None
    updated_at: Optional[Any] = None
    user: Optional["users_obj_rel_insert_input"] = None
    user_id: Optional[Any] = None


class alerts_max_order_by(BaseModel):
    created_at: Optional[order_by] = None
    delivery_type: Optional[order_by] = None
    exploration_id: Optional[order_by] = None
    id: Optional[order_by] = None
    name: Optional[order_by] = None
    schedule: Optional[order_by] = None
    team_id: Optional[order_by] = None
    updated_at: Optional[order_by] = None
    user_id: Optional[order_by] = None


class alerts_min_order_by(BaseModel):
    created_at: Optional[order_by] = None
    delivery_type: Optional[order_by] = None
    exploration_id: Optional[order_by] = None
    id: Optional[order_by] = None
    name: Optional[order_by] = None
    schedule: Optional[order_by] = None
    team_id: Optional[order_by] = None
    updated_at: Optional[order_by] = None
    user_id: Optional[order_by] = None


class alerts_on_conflict(BaseModel):
    constraint: alerts_constraint
    update_columns: List[alerts_update_column]
    where: Optional["alerts_bool_exp"] = None


class alerts_order_by(BaseModel):
    created_at: Optional[order_by] = None
    delivery_config: Optional[order_by] = None
    delivery_type: Optional[order_by] = None
    exploration: Optional["explorations_order_by"] = None
    exploration_id: Optional[order_by] = None
    id: Optional[order_by] = None
    locks_config: Optional[order_by] = None
    name: Optional[order_by] = None
    schedule: Optional[order_by] = None
    team: Optional["teams_order_by"] = None
    team_id: Optional[order_by] = None
    trigger_config: Optional[order_by] = None
    updated_at: Optional[order_by] = None
    user: Optional["users_order_by"] = None
    user_id: Optional[order_by] = None


class alerts_pk_columns_input(BaseModel):
    id: Any


class alerts_prepend_input(BaseModel):
    delivery_config: Optional[Any] = None
    locks_config: Optional[Any] = None
    trigger_config: Optional[Any] = None


class alerts_set_input(BaseModel):
    created_at: Optional[Any] = None
    delivery_config: Optional[Any] = None
    delivery_type: Optional[str] = None
    exploration_id: Optional[Any] = None
    id: Optional[Any] = None
    locks_config: Optional[Any] = None
    name: Optional[str] = None
    schedule: Optional[str] = None
    team_id: Optional[Any] = None
    trigger_config: Optional[Any] = None
    updated_at: Optional[Any] = None
    user_id: Optional[Any] = None


class alerts_stream_cursor_input(BaseModel):
    initial_value: "alerts_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class alerts_stream_cursor_value_input(BaseModel):
    created_at: Optional[Any] = None
    delivery_config: Optional[Any] = None
    delivery_type: Optional[str] = None
    exploration_id: Optional[Any] = None
    id: Optional[Any] = None
    locks_config: Optional[Any] = None
    name: Optional[str] = None
    schedule: Optional[str] = None
    team_id: Optional[Any] = None
    trigger_config: Optional[Any] = None
    updated_at: Optional[Any] = None
    user_id: Optional[Any] = None


class alerts_updates(BaseModel):
    append: Optional["alerts_append_input"] = Field(alias="_append", default=None)
    delete_at_path: Optional["alerts_delete_at_path_input"] = Field(
        alias="_delete_at_path", default=None
    )
    delete_elem: Optional["alerts_delete_elem_input"] = Field(
        alias="_delete_elem", default=None
    )
    delete_key: Optional["alerts_delete_key_input"] = Field(
        alias="_delete_key", default=None
    )
    prepend: Optional["alerts_prepend_input"] = Field(alias="_prepend", default=None)
    set: Optional["alerts_set_input"] = Field(alias="_set", default=None)
    where: "alerts_bool_exp"


class auth_account_providers_aggregate_bool_exp(BaseModel):
    count: Optional["auth_account_providers_aggregate_bool_exp_count"] = None


class auth_account_providers_aggregate_bool_exp_count(BaseModel):
    arguments: Optional[List[auth_account_providers_select_column]] = None
    distinct: Optional[bool] = None
    filter: Optional["auth_account_providers_bool_exp"] = None
    predicate: "Int_comparison_exp"


class auth_account_providers_aggregate_order_by(BaseModel):
    count: Optional[order_by] = None
    max: Optional["auth_account_providers_max_order_by"] = None
    min: Optional["auth_account_providers_min_order_by"] = None


class auth_account_providers_arr_rel_insert_input(BaseModel):
    data: List["auth_account_providers_insert_input"]
    on_conflict: Optional["auth_account_providers_on_conflict"] = None


class auth_account_providers_bool_exp(BaseModel):
    and_: Optional[List["auth_account_providers_bool_exp"]] = Field(
        alias="_and", default=None
    )
    not_: Optional["auth_account_providers_bool_exp"] = Field(
        alias="_not", default=None
    )
    or_: Optional[List["auth_account_providers_bool_exp"]] = Field(
        alias="_or", default=None
    )
    account: Optional["auth_accounts_bool_exp"] = None
    account_id: Optional["uuid_comparison_exp"] = None
    auth_provider: Optional["String_comparison_exp"] = None
    auth_provider_unique_id: Optional["String_comparison_exp"] = None
    created_at: Optional["timestamptz_comparison_exp"] = None
    id: Optional["uuid_comparison_exp"] = None
    provider: Optional["auth_providers_bool_exp"] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None


class auth_account_providers_insert_input(BaseModel):
    account: Optional["auth_accounts_obj_rel_insert_input"] = None
    account_id: Optional[Any] = None
    auth_provider: Optional[str] = None
    auth_provider_unique_id: Optional[str] = None
    created_at: Optional[Any] = None
    id: Optional[Any] = None
    provider: Optional["auth_providers_obj_rel_insert_input"] = None
    updated_at: Optional[Any] = None


class auth_account_providers_max_order_by(BaseModel):
    account_id: Optional[order_by] = None
    auth_provider: Optional[order_by] = None
    auth_provider_unique_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    id: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class auth_account_providers_min_order_by(BaseModel):
    account_id: Optional[order_by] = None
    auth_provider: Optional[order_by] = None
    auth_provider_unique_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    id: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class auth_account_providers_on_conflict(BaseModel):
    constraint: auth_account_providers_constraint
    update_columns: List[auth_account_providers_update_column]
    where: Optional["auth_account_providers_bool_exp"] = None


class auth_account_providers_order_by(BaseModel):
    account: Optional["auth_accounts_order_by"] = None
    account_id: Optional[order_by] = None
    auth_provider: Optional[order_by] = None
    auth_provider_unique_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    id: Optional[order_by] = None
    provider: Optional["auth_providers_order_by"] = None
    updated_at: Optional[order_by] = None


class auth_account_providers_pk_columns_input(BaseModel):
    id: Any


class auth_account_providers_set_input(BaseModel):
    account_id: Optional[Any] = None
    auth_provider: Optional[str] = None
    auth_provider_unique_id: Optional[str] = None
    created_at: Optional[Any] = None
    id: Optional[Any] = None
    updated_at: Optional[Any] = None


class auth_account_providers_stream_cursor_input(BaseModel):
    initial_value: "auth_account_providers_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class auth_account_providers_stream_cursor_value_input(BaseModel):
    account_id: Optional[Any] = None
    auth_provider: Optional[str] = None
    auth_provider_unique_id: Optional[str] = None
    created_at: Optional[Any] = None
    id: Optional[Any] = None
    updated_at: Optional[Any] = None


class auth_account_providers_updates(BaseModel):
    set: Optional["auth_account_providers_set_input"] = Field(
        alias="_set", default=None
    )
    where: "auth_account_providers_bool_exp"


class auth_account_roles_aggregate_bool_exp(BaseModel):
    count: Optional["auth_account_roles_aggregate_bool_exp_count"] = None


class auth_account_roles_aggregate_bool_exp_count(BaseModel):
    arguments: Optional[List[auth_account_roles_select_column]] = None
    distinct: Optional[bool] = None
    filter: Optional["auth_account_roles_bool_exp"] = None
    predicate: "Int_comparison_exp"


class auth_account_roles_aggregate_order_by(BaseModel):
    count: Optional[order_by] = None
    max: Optional["auth_account_roles_max_order_by"] = None
    min: Optional["auth_account_roles_min_order_by"] = None


class auth_account_roles_arr_rel_insert_input(BaseModel):
    data: List["auth_account_roles_insert_input"]
    on_conflict: Optional["auth_account_roles_on_conflict"] = None


class auth_account_roles_bool_exp(BaseModel):
    and_: Optional[List["auth_account_roles_bool_exp"]] = Field(
        alias="_and", default=None
    )
    not_: Optional["auth_account_roles_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["auth_account_roles_bool_exp"]] = Field(
        alias="_or", default=None
    )
    account: Optional["auth_accounts_bool_exp"] = None
    account_id: Optional["uuid_comparison_exp"] = None
    created_at: Optional["timestamptz_comparison_exp"] = None
    id: Optional["uuid_comparison_exp"] = None
    role: Optional["String_comparison_exp"] = None
    role_by_role: Optional["auth_roles_bool_exp"] = Field(
        alias="roleByRole", default=None
    )


class auth_account_roles_insert_input(BaseModel):
    account: Optional["auth_accounts_obj_rel_insert_input"] = None
    account_id: Optional[Any] = None
    created_at: Optional[Any] = None
    id: Optional[Any] = None
    role: Optional[str] = None
    role_by_role: Optional["auth_roles_obj_rel_insert_input"] = Field(
        alias="roleByRole", default=None
    )


class auth_account_roles_max_order_by(BaseModel):
    account_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    id: Optional[order_by] = None
    role: Optional[order_by] = None


class auth_account_roles_min_order_by(BaseModel):
    account_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    id: Optional[order_by] = None
    role: Optional[order_by] = None


class auth_account_roles_on_conflict(BaseModel):
    constraint: auth_account_roles_constraint
    update_columns: List[auth_account_roles_update_column]
    where: Optional["auth_account_roles_bool_exp"] = None


class auth_account_roles_order_by(BaseModel):
    account: Optional["auth_accounts_order_by"] = None
    account_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    id: Optional[order_by] = None
    role: Optional[order_by] = None
    role_by_role: Optional["auth_roles_order_by"] = Field(
        alias="roleByRole", default=None
    )


class auth_account_roles_pk_columns_input(BaseModel):
    id: Any


class auth_account_roles_set_input(BaseModel):
    account_id: Optional[Any] = None
    created_at: Optional[Any] = None
    id: Optional[Any] = None
    role: Optional[str] = None


class auth_account_roles_stream_cursor_input(BaseModel):
    initial_value: "auth_account_roles_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class auth_account_roles_stream_cursor_value_input(BaseModel):
    account_id: Optional[Any] = None
    created_at: Optional[Any] = None
    id: Optional[Any] = None
    role: Optional[str] = None


class auth_account_roles_updates(BaseModel):
    set: Optional["auth_account_roles_set_input"] = Field(alias="_set", default=None)
    where: "auth_account_roles_bool_exp"


class auth_accounts_aggregate_bool_exp(BaseModel):
    bool_and: Optional["auth_accounts_aggregate_bool_exp_bool_and"] = None
    bool_or: Optional["auth_accounts_aggregate_bool_exp_bool_or"] = None
    count: Optional["auth_accounts_aggregate_bool_exp_count"] = None


class auth_accounts_aggregate_bool_exp_bool_and(BaseModel):
    arguments: auth_accounts_select_column_auth_accounts_aggregate_bool_exp_bool_and_arguments_columns
    distinct: Optional[bool] = None
    filter: Optional["auth_accounts_bool_exp"] = None
    predicate: "Boolean_comparison_exp"


class auth_accounts_aggregate_bool_exp_bool_or(BaseModel):
    arguments: auth_accounts_select_column_auth_accounts_aggregate_bool_exp_bool_or_arguments_columns
    distinct: Optional[bool] = None
    filter: Optional["auth_accounts_bool_exp"] = None
    predicate: "Boolean_comparison_exp"


class auth_accounts_aggregate_bool_exp_count(BaseModel):
    arguments: Optional[List[auth_accounts_select_column]] = None
    distinct: Optional[bool] = None
    filter: Optional["auth_accounts_bool_exp"] = None
    predicate: "Int_comparison_exp"


class auth_accounts_aggregate_order_by(BaseModel):
    count: Optional[order_by] = None
    max: Optional["auth_accounts_max_order_by"] = None
    min: Optional["auth_accounts_min_order_by"] = None


class auth_accounts_append_input(BaseModel):
    custom_register_data: Optional[Any] = None


class auth_accounts_arr_rel_insert_input(BaseModel):
    data: List["auth_accounts_insert_input"]
    on_conflict: Optional["auth_accounts_on_conflict"] = None


class auth_accounts_bool_exp(BaseModel):
    and_: Optional[List["auth_accounts_bool_exp"]] = Field(alias="_and", default=None)
    not_: Optional["auth_accounts_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["auth_accounts_bool_exp"]] = Field(alias="_or", default=None)
    account_providers: Optional["auth_account_providers_bool_exp"] = None
    account_providers_aggregate: Optional[
        "auth_account_providers_aggregate_bool_exp"
    ] = None
    account_roles: Optional["auth_account_roles_bool_exp"] = None
    account_roles_aggregate: Optional["auth_account_roles_aggregate_bool_exp"] = None
    active: Optional["Boolean_comparison_exp"] = None
    created_at: Optional["timestamptz_comparison_exp"] = None
    custom_register_data: Optional["jsonb_comparison_exp"] = None
    default_role: Optional["String_comparison_exp"] = None
    email: Optional["citext_comparison_exp"] = None
    id: Optional["uuid_comparison_exp"] = None
    is_anonymous: Optional["Boolean_comparison_exp"] = None
    mfa_enabled: Optional["Boolean_comparison_exp"] = None
    new_email: Optional["citext_comparison_exp"] = None
    otp_secret: Optional["String_comparison_exp"] = None
    password_hash: Optional["String_comparison_exp"] = None
    refresh_tokens: Optional["auth_refresh_tokens_bool_exp"] = None
    refresh_tokens_aggregate: Optional["auth_refresh_tokens_aggregate_bool_exp"] = None
    role: Optional["auth_roles_bool_exp"] = None
    ticket: Optional["uuid_comparison_exp"] = None
    ticket_expires_at: Optional["timestamptz_comparison_exp"] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None
    user: Optional["users_bool_exp"] = None
    user_id: Optional["uuid_comparison_exp"] = None


class auth_accounts_delete_at_path_input(BaseModel):
    custom_register_data: Optional[List[str]] = None


class auth_accounts_delete_elem_input(BaseModel):
    custom_register_data: Optional[int] = None


class auth_accounts_delete_key_input(BaseModel):
    custom_register_data: Optional[str] = None


class auth_accounts_insert_input(BaseModel):
    account_providers: Optional["auth_account_providers_arr_rel_insert_input"] = None
    account_roles: Optional["auth_account_roles_arr_rel_insert_input"] = None
    active: Optional[bool] = None
    created_at: Optional[Any] = None
    custom_register_data: Optional[Any] = None
    default_role: Optional[str] = None
    email: Optional[Any] = None
    id: Optional[Any] = None
    is_anonymous: Optional[bool] = None
    mfa_enabled: Optional[bool] = None
    new_email: Optional[Any] = None
    otp_secret: Optional[str] = None
    password_hash: Optional[str] = None
    refresh_tokens: Optional["auth_refresh_tokens_arr_rel_insert_input"] = None
    role: Optional["auth_roles_obj_rel_insert_input"] = None
    ticket: Optional[Any] = None
    ticket_expires_at: Optional[Any] = None
    updated_at: Optional[Any] = None
    user: Optional["users_obj_rel_insert_input"] = None
    user_id: Optional[Any] = None


class auth_accounts_max_order_by(BaseModel):
    created_at: Optional[order_by] = None
    default_role: Optional[order_by] = None
    email: Optional[order_by] = None
    id: Optional[order_by] = None
    new_email: Optional[order_by] = None
    otp_secret: Optional[order_by] = None
    password_hash: Optional[order_by] = None
    ticket: Optional[order_by] = None
    ticket_expires_at: Optional[order_by] = None
    updated_at: Optional[order_by] = None
    user_id: Optional[order_by] = None


class auth_accounts_min_order_by(BaseModel):
    created_at: Optional[order_by] = None
    default_role: Optional[order_by] = None
    email: Optional[order_by] = None
    id: Optional[order_by] = None
    new_email: Optional[order_by] = None
    otp_secret: Optional[order_by] = None
    password_hash: Optional[order_by] = None
    ticket: Optional[order_by] = None
    ticket_expires_at: Optional[order_by] = None
    updated_at: Optional[order_by] = None
    user_id: Optional[order_by] = None


class auth_accounts_obj_rel_insert_input(BaseModel):
    data: "auth_accounts_insert_input"
    on_conflict: Optional["auth_accounts_on_conflict"] = None


class auth_accounts_on_conflict(BaseModel):
    constraint: auth_accounts_constraint
    update_columns: List[auth_accounts_update_column]
    where: Optional["auth_accounts_bool_exp"] = None


class auth_accounts_order_by(BaseModel):
    account_providers_aggregate: Optional[
        "auth_account_providers_aggregate_order_by"
    ] = None
    account_roles_aggregate: Optional["auth_account_roles_aggregate_order_by"] = None
    active: Optional[order_by] = None
    created_at: Optional[order_by] = None
    custom_register_data: Optional[order_by] = None
    default_role: Optional[order_by] = None
    email: Optional[order_by] = None
    id: Optional[order_by] = None
    is_anonymous: Optional[order_by] = None
    mfa_enabled: Optional[order_by] = None
    new_email: Optional[order_by] = None
    otp_secret: Optional[order_by] = None
    password_hash: Optional[order_by] = None
    refresh_tokens_aggregate: Optional["auth_refresh_tokens_aggregate_order_by"] = None
    role: Optional["auth_roles_order_by"] = None
    ticket: Optional[order_by] = None
    ticket_expires_at: Optional[order_by] = None
    updated_at: Optional[order_by] = None
    user: Optional["users_order_by"] = None
    user_id: Optional[order_by] = None


class auth_accounts_pk_columns_input(BaseModel):
    id: Any


class auth_accounts_prepend_input(BaseModel):
    custom_register_data: Optional[Any] = None


class auth_accounts_set_input(BaseModel):
    active: Optional[bool] = None
    created_at: Optional[Any] = None
    custom_register_data: Optional[Any] = None
    default_role: Optional[str] = None
    email: Optional[Any] = None
    id: Optional[Any] = None
    is_anonymous: Optional[bool] = None
    mfa_enabled: Optional[bool] = None
    new_email: Optional[Any] = None
    otp_secret: Optional[str] = None
    password_hash: Optional[str] = None
    ticket: Optional[Any] = None
    ticket_expires_at: Optional[Any] = None
    updated_at: Optional[Any] = None
    user_id: Optional[Any] = None


class auth_accounts_stream_cursor_input(BaseModel):
    initial_value: "auth_accounts_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class auth_accounts_stream_cursor_value_input(BaseModel):
    active: Optional[bool] = None
    created_at: Optional[Any] = None
    custom_register_data: Optional[Any] = None
    default_role: Optional[str] = None
    email: Optional[Any] = None
    id: Optional[Any] = None
    is_anonymous: Optional[bool] = None
    mfa_enabled: Optional[bool] = None
    new_email: Optional[Any] = None
    otp_secret: Optional[str] = None
    password_hash: Optional[str] = None
    ticket: Optional[Any] = None
    ticket_expires_at: Optional[Any] = None
    updated_at: Optional[Any] = None
    user_id: Optional[Any] = None


class auth_accounts_updates(BaseModel):
    append: Optional["auth_accounts_append_input"] = Field(
        alias="_append", default=None
    )
    delete_at_path: Optional["auth_accounts_delete_at_path_input"] = Field(
        alias="_delete_at_path", default=None
    )
    delete_elem: Optional["auth_accounts_delete_elem_input"] = Field(
        alias="_delete_elem", default=None
    )
    delete_key: Optional["auth_accounts_delete_key_input"] = Field(
        alias="_delete_key", default=None
    )
    prepend: Optional["auth_accounts_prepend_input"] = Field(
        alias="_prepend", default=None
    )
    set: Optional["auth_accounts_set_input"] = Field(alias="_set", default=None)
    where: "auth_accounts_bool_exp"


class auth_providers_bool_exp(BaseModel):
    and_: Optional[List["auth_providers_bool_exp"]] = Field(alias="_and", default=None)
    not_: Optional["auth_providers_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["auth_providers_bool_exp"]] = Field(alias="_or", default=None)
    account_providers: Optional["auth_account_providers_bool_exp"] = None
    account_providers_aggregate: Optional[
        "auth_account_providers_aggregate_bool_exp"
    ] = None
    provider: Optional["String_comparison_exp"] = None


class auth_providers_insert_input(BaseModel):
    account_providers: Optional["auth_account_providers_arr_rel_insert_input"] = None
    provider: Optional[str] = None


class auth_providers_obj_rel_insert_input(BaseModel):
    data: "auth_providers_insert_input"
    on_conflict: Optional["auth_providers_on_conflict"] = None


class auth_providers_on_conflict(BaseModel):
    constraint: auth_providers_constraint
    update_columns: List[auth_providers_update_column]
    where: Optional["auth_providers_bool_exp"] = None


class auth_providers_order_by(BaseModel):
    account_providers_aggregate: Optional[
        "auth_account_providers_aggregate_order_by"
    ] = None
    provider: Optional[order_by] = None


class auth_providers_pk_columns_input(BaseModel):
    provider: str


class auth_providers_set_input(BaseModel):
    provider: Optional[str] = None


class auth_providers_stream_cursor_input(BaseModel):
    initial_value: "auth_providers_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class auth_providers_stream_cursor_value_input(BaseModel):
    provider: Optional[str] = None


class auth_providers_updates(BaseModel):
    set: Optional["auth_providers_set_input"] = Field(alias="_set", default=None)
    where: "auth_providers_bool_exp"


class auth_refresh_tokens_aggregate_bool_exp(BaseModel):
    count: Optional["auth_refresh_tokens_aggregate_bool_exp_count"] = None


class auth_refresh_tokens_aggregate_bool_exp_count(BaseModel):
    arguments: Optional[List[auth_refresh_tokens_select_column]] = None
    distinct: Optional[bool] = None
    filter: Optional["auth_refresh_tokens_bool_exp"] = None
    predicate: "Int_comparison_exp"


class auth_refresh_tokens_aggregate_order_by(BaseModel):
    count: Optional[order_by] = None
    max: Optional["auth_refresh_tokens_max_order_by"] = None
    min: Optional["auth_refresh_tokens_min_order_by"] = None


class auth_refresh_tokens_arr_rel_insert_input(BaseModel):
    data: List["auth_refresh_tokens_insert_input"]
    on_conflict: Optional["auth_refresh_tokens_on_conflict"] = None


class auth_refresh_tokens_bool_exp(BaseModel):
    and_: Optional[List["auth_refresh_tokens_bool_exp"]] = Field(
        alias="_and", default=None
    )
    not_: Optional["auth_refresh_tokens_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["auth_refresh_tokens_bool_exp"]] = Field(
        alias="_or", default=None
    )
    account: Optional["auth_accounts_bool_exp"] = None
    account_id: Optional["uuid_comparison_exp"] = None
    created_at: Optional["timestamptz_comparison_exp"] = None
    expires_at: Optional["timestamptz_comparison_exp"] = None
    refresh_token: Optional["uuid_comparison_exp"] = None


class auth_refresh_tokens_insert_input(BaseModel):
    account: Optional["auth_accounts_obj_rel_insert_input"] = None
    account_id: Optional[Any] = None
    created_at: Optional[Any] = None
    expires_at: Optional[Any] = None
    refresh_token: Optional[Any] = None


class auth_refresh_tokens_max_order_by(BaseModel):
    account_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    expires_at: Optional[order_by] = None
    refresh_token: Optional[order_by] = None


class auth_refresh_tokens_min_order_by(BaseModel):
    account_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    expires_at: Optional[order_by] = None
    refresh_token: Optional[order_by] = None


class auth_refresh_tokens_on_conflict(BaseModel):
    constraint: auth_refresh_tokens_constraint
    update_columns: List[auth_refresh_tokens_update_column]
    where: Optional["auth_refresh_tokens_bool_exp"] = None


class auth_refresh_tokens_order_by(BaseModel):
    account: Optional["auth_accounts_order_by"] = None
    account_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    expires_at: Optional[order_by] = None
    refresh_token: Optional[order_by] = None


class auth_refresh_tokens_pk_columns_input(BaseModel):
    refresh_token: Any


class auth_refresh_tokens_set_input(BaseModel):
    account_id: Optional[Any] = None
    created_at: Optional[Any] = None
    expires_at: Optional[Any] = None
    refresh_token: Optional[Any] = None


class auth_refresh_tokens_stream_cursor_input(BaseModel):
    initial_value: "auth_refresh_tokens_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class auth_refresh_tokens_stream_cursor_value_input(BaseModel):
    account_id: Optional[Any] = None
    created_at: Optional[Any] = None
    expires_at: Optional[Any] = None
    refresh_token: Optional[Any] = None


class auth_refresh_tokens_updates(BaseModel):
    set: Optional["auth_refresh_tokens_set_input"] = Field(alias="_set", default=None)
    where: "auth_refresh_tokens_bool_exp"


class auth_roles_bool_exp(BaseModel):
    and_: Optional[List["auth_roles_bool_exp"]] = Field(alias="_and", default=None)
    not_: Optional["auth_roles_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["auth_roles_bool_exp"]] = Field(alias="_or", default=None)
    account_roles: Optional["auth_account_roles_bool_exp"] = None
    account_roles_aggregate: Optional["auth_account_roles_aggregate_bool_exp"] = None
    accounts: Optional["auth_accounts_bool_exp"] = None
    accounts_aggregate: Optional["auth_accounts_aggregate_bool_exp"] = None
    role: Optional["String_comparison_exp"] = None


class auth_roles_insert_input(BaseModel):
    account_roles: Optional["auth_account_roles_arr_rel_insert_input"] = None
    accounts: Optional["auth_accounts_arr_rel_insert_input"] = None
    role: Optional[str] = None


class auth_roles_obj_rel_insert_input(BaseModel):
    data: "auth_roles_insert_input"
    on_conflict: Optional["auth_roles_on_conflict"] = None


class auth_roles_on_conflict(BaseModel):
    constraint: auth_roles_constraint
    update_columns: List[auth_roles_update_column]
    where: Optional["auth_roles_bool_exp"] = None


class auth_roles_order_by(BaseModel):
    account_roles_aggregate: Optional["auth_account_roles_aggregate_order_by"] = None
    accounts_aggregate: Optional["auth_accounts_aggregate_order_by"] = None
    role: Optional[order_by] = None


class auth_roles_pk_columns_input(BaseModel):
    role: str


class auth_roles_set_input(BaseModel):
    role: Optional[str] = None


class auth_roles_stream_cursor_input(BaseModel):
    initial_value: "auth_roles_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class auth_roles_stream_cursor_value_input(BaseModel):
    role: Optional[str] = None


class auth_roles_updates(BaseModel):
    set: Optional["auth_roles_set_input"] = Field(alias="_set", default=None)
    where: "auth_roles_bool_exp"


class branch_statuses_bool_exp(BaseModel):
    and_: Optional[List["branch_statuses_bool_exp"]] = Field(alias="_and", default=None)
    not_: Optional["branch_statuses_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["branch_statuses_bool_exp"]] = Field(alias="_or", default=None)
    status: Optional["String_comparison_exp"] = None


class branch_statuses_enum_comparison_exp(BaseModel):
    eq: Optional[branch_statuses_enum] = Field(alias="_eq", default=None)
    in_: Optional[List[branch_statuses_enum]] = Field(alias="_in", default=None)
    is_null: Optional[bool] = Field(alias="_is_null", default=None)
    neq: Optional[branch_statuses_enum] = Field(alias="_neq", default=None)
    nin: Optional[List[branch_statuses_enum]] = Field(alias="_nin", default=None)


class branch_statuses_insert_input(BaseModel):
    status: Optional[str] = None


class branch_statuses_obj_rel_insert_input(BaseModel):
    data: "branch_statuses_insert_input"
    on_conflict: Optional["branch_statuses_on_conflict"] = None


class branch_statuses_on_conflict(BaseModel):
    constraint: branch_statuses_constraint
    update_columns: List[branch_statuses_update_column]
    where: Optional["branch_statuses_bool_exp"] = None


class branch_statuses_order_by(BaseModel):
    status: Optional[order_by] = None


class branch_statuses_pk_columns_input(BaseModel):
    status: str


class branch_statuses_set_input(BaseModel):
    status: Optional[str] = None


class branch_statuses_stream_cursor_input(BaseModel):
    initial_value: "branch_statuses_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class branch_statuses_stream_cursor_value_input(BaseModel):
    status: Optional[str] = None


class branch_statuses_updates(BaseModel):
    set: Optional["branch_statuses_set_input"] = Field(alias="_set", default=None)
    where: "branch_statuses_bool_exp"


class branches_aggregate_bool_exp(BaseModel):
    count: Optional["branches_aggregate_bool_exp_count"] = None


class branches_aggregate_bool_exp_count(BaseModel):
    arguments: Optional[List[branches_select_column]] = None
    distinct: Optional[bool] = None
    filter: Optional["branches_bool_exp"] = None
    predicate: "Int_comparison_exp"


class branches_aggregate_order_by(BaseModel):
    count: Optional[order_by] = None
    max: Optional["branches_max_order_by"] = None
    min: Optional["branches_min_order_by"] = None


class branches_arr_rel_insert_input(BaseModel):
    data: List["branches_insert_input"]
    on_conflict: Optional["branches_on_conflict"] = None


class branches_bool_exp(BaseModel):
    and_: Optional[List["branches_bool_exp"]] = Field(alias="_and", default=None)
    not_: Optional["branches_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["branches_bool_exp"]] = Field(alias="_or", default=None)
    branch_status: Optional["branch_statuses_bool_exp"] = None
    created_at: Optional["timestamptz_comparison_exp"] = None
    datasource: Optional["datasources_bool_exp"] = None
    datasource_id: Optional["uuid_comparison_exp"] = None
    explorations: Optional["explorations_bool_exp"] = None
    explorations_aggregate: Optional["explorations_aggregate_bool_exp"] = None
    id: Optional["uuid_comparison_exp"] = None
    name: Optional["String_comparison_exp"] = None
    status: Optional["branch_statuses_enum_comparison_exp"] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None
    user: Optional["users_bool_exp"] = None
    user_id: Optional["uuid_comparison_exp"] = None
    versions: Optional["versions_bool_exp"] = None
    versions_aggregate: Optional["versions_aggregate_bool_exp"] = None


class branches_insert_input(BaseModel):
    branch_status: Optional["branch_statuses_obj_rel_insert_input"] = None
    created_at: Optional[Any] = None
    datasource: Optional["datasources_obj_rel_insert_input"] = None
    datasource_id: Optional[Any] = None
    explorations: Optional["explorations_arr_rel_insert_input"] = None
    id: Optional[Any] = None
    name: Optional[str] = None
    status: Optional[branch_statuses_enum] = None
    updated_at: Optional[Any] = None
    user: Optional["users_obj_rel_insert_input"] = None
    user_id: Optional[Any] = None
    versions: Optional["versions_arr_rel_insert_input"] = None


class branches_max_order_by(BaseModel):
    created_at: Optional[order_by] = None
    datasource_id: Optional[order_by] = None
    id: Optional[order_by] = None
    name: Optional[order_by] = None
    updated_at: Optional[order_by] = None
    user_id: Optional[order_by] = None


class branches_min_order_by(BaseModel):
    created_at: Optional[order_by] = None
    datasource_id: Optional[order_by] = None
    id: Optional[order_by] = None
    name: Optional[order_by] = None
    updated_at: Optional[order_by] = None
    user_id: Optional[order_by] = None


class branches_obj_rel_insert_input(BaseModel):
    data: "branches_insert_input"
    on_conflict: Optional["branches_on_conflict"] = None


class branches_on_conflict(BaseModel):
    constraint: branches_constraint
    update_columns: List[branches_update_column]
    where: Optional["branches_bool_exp"] = None


class branches_order_by(BaseModel):
    branch_status: Optional["branch_statuses_order_by"] = None
    created_at: Optional[order_by] = None
    datasource: Optional["datasources_order_by"] = None
    datasource_id: Optional[order_by] = None
    explorations_aggregate: Optional["explorations_aggregate_order_by"] = None
    id: Optional[order_by] = None
    name: Optional[order_by] = None
    status: Optional[order_by] = None
    updated_at: Optional[order_by] = None
    user: Optional["users_order_by"] = None
    user_id: Optional[order_by] = None
    versions_aggregate: Optional["versions_aggregate_order_by"] = None


class branches_pk_columns_input(BaseModel):
    id: Any


class branches_set_input(BaseModel):
    created_at: Optional[Any] = None
    datasource_id: Optional[Any] = None
    id: Optional[Any] = None
    name: Optional[str] = None
    status: Optional[branch_statuses_enum] = None
    updated_at: Optional[Any] = None
    user_id: Optional[Any] = None


class branches_stream_cursor_input(BaseModel):
    initial_value: "branches_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class branches_stream_cursor_value_input(BaseModel):
    created_at: Optional[Any] = None
    datasource_id: Optional[Any] = None
    id: Optional[Any] = None
    name: Optional[str] = None
    status: Optional[branch_statuses_enum] = None
    updated_at: Optional[Any] = None
    user_id: Optional[Any] = None


class branches_updates(BaseModel):
    set: Optional["branches_set_input"] = Field(alias="_set", default=None)
    where: "branches_bool_exp"


class citext_comparison_exp(BaseModel):
    eq: Optional[Any] = Field(alias="_eq", default=None)
    gt: Optional[Any] = Field(alias="_gt", default=None)
    gte: Optional[Any] = Field(alias="_gte", default=None)
    ilike: Optional[Any] = Field(alias="_ilike", default=None)
    in_: Optional[List[Any]] = Field(alias="_in", default=None)
    iregex: Optional[Any] = Field(alias="_iregex", default=None)
    is_null: Optional[bool] = Field(alias="_is_null", default=None)
    like: Optional[Any] = Field(alias="_like", default=None)
    lt: Optional[Any] = Field(alias="_lt", default=None)
    lte: Optional[Any] = Field(alias="_lte", default=None)
    neq: Optional[Any] = Field(alias="_neq", default=None)
    nilike: Optional[Any] = Field(alias="_nilike", default=None)
    nin: Optional[List[Any]] = Field(alias="_nin", default=None)
    niregex: Optional[Any] = Field(alias="_niregex", default=None)
    nlike: Optional[Any] = Field(alias="_nlike", default=None)
    nregex: Optional[Any] = Field(alias="_nregex", default=None)
    nsimilar: Optional[Any] = Field(alias="_nsimilar", default=None)
    regex: Optional[Any] = Field(alias="_regex", default=None)
    similar: Optional[Any] = Field(alias="_similar", default=None)


class dashboards_aggregate_bool_exp(BaseModel):
    count: Optional["dashboards_aggregate_bool_exp_count"] = None


class dashboards_aggregate_bool_exp_count(BaseModel):
    arguments: Optional[List[dashboards_select_column]] = None
    distinct: Optional[bool] = None
    filter: Optional["dashboards_bool_exp"] = None
    predicate: "Int_comparison_exp"


class dashboards_aggregate_order_by(BaseModel):
    count: Optional[order_by] = None
    max: Optional["dashboards_max_order_by"] = None
    min: Optional["dashboards_min_order_by"] = None


class dashboards_append_input(BaseModel):
    layout: Optional[Any] = None


class dashboards_arr_rel_insert_input(BaseModel):
    data: List["dashboards_insert_input"]
    on_conflict: Optional["dashboards_on_conflict"] = None


class dashboards_bool_exp(BaseModel):
    and_: Optional[List["dashboards_bool_exp"]] = Field(alias="_and", default=None)
    not_: Optional["dashboards_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["dashboards_bool_exp"]] = Field(alias="_or", default=None)
    created_at: Optional["timestamptz_comparison_exp"] = None
    id: Optional["uuid_comparison_exp"] = None
    layout: Optional["jsonb_comparison_exp"] = None
    name: Optional["String_comparison_exp"] = None
    pinned_items: Optional["pinned_items_bool_exp"] = None
    pinned_items_aggregate: Optional["pinned_items_aggregate_bool_exp"] = None
    team: Optional["teams_bool_exp"] = None
    team_id: Optional["uuid_comparison_exp"] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None
    user_id: Optional["uuid_comparison_exp"] = None


class dashboards_delete_at_path_input(BaseModel):
    layout: Optional[List[str]] = None


class dashboards_delete_elem_input(BaseModel):
    layout: Optional[int] = None


class dashboards_delete_key_input(BaseModel):
    layout: Optional[str] = None


class dashboards_insert_input(BaseModel):
    created_at: Optional[Any] = None
    id: Optional[Any] = None
    layout: Optional[Any] = None
    name: Optional[str] = None
    pinned_items: Optional["pinned_items_arr_rel_insert_input"] = None
    team: Optional["teams_obj_rel_insert_input"] = None
    team_id: Optional[Any] = None
    updated_at: Optional[Any] = None
    user_id: Optional[Any] = None


class dashboards_max_order_by(BaseModel):
    created_at: Optional[order_by] = None
    id: Optional[order_by] = None
    name: Optional[order_by] = None
    team_id: Optional[order_by] = None
    updated_at: Optional[order_by] = None
    user_id: Optional[order_by] = None


class dashboards_min_order_by(BaseModel):
    created_at: Optional[order_by] = None
    id: Optional[order_by] = None
    name: Optional[order_by] = None
    team_id: Optional[order_by] = None
    updated_at: Optional[order_by] = None
    user_id: Optional[order_by] = None


class dashboards_obj_rel_insert_input(BaseModel):
    data: "dashboards_insert_input"
    on_conflict: Optional["dashboards_on_conflict"] = None


class dashboards_on_conflict(BaseModel):
    constraint: dashboards_constraint
    update_columns: List[dashboards_update_column]
    where: Optional["dashboards_bool_exp"] = None


class dashboards_order_by(BaseModel):
    created_at: Optional[order_by] = None
    id: Optional[order_by] = None
    layout: Optional[order_by] = None
    name: Optional[order_by] = None
    pinned_items_aggregate: Optional["pinned_items_aggregate_order_by"] = None
    team: Optional["teams_order_by"] = None
    team_id: Optional[order_by] = None
    updated_at: Optional[order_by] = None
    user_id: Optional[order_by] = None


class dashboards_pk_columns_input(BaseModel):
    id: Any


class dashboards_prepend_input(BaseModel):
    layout: Optional[Any] = None


class dashboards_set_input(BaseModel):
    created_at: Optional[Any] = None
    id: Optional[Any] = None
    layout: Optional[Any] = None
    name: Optional[str] = None
    team_id: Optional[Any] = None
    updated_at: Optional[Any] = None
    user_id: Optional[Any] = None


class dashboards_stream_cursor_input(BaseModel):
    initial_value: "dashboards_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class dashboards_stream_cursor_value_input(BaseModel):
    created_at: Optional[Any] = None
    id: Optional[Any] = None
    layout: Optional[Any] = None
    name: Optional[str] = None
    team_id: Optional[Any] = None
    updated_at: Optional[Any] = None
    user_id: Optional[Any] = None


class dashboards_updates(BaseModel):
    append: Optional["dashboards_append_input"] = Field(alias="_append", default=None)
    delete_at_path: Optional["dashboards_delete_at_path_input"] = Field(
        alias="_delete_at_path", default=None
    )
    delete_elem: Optional["dashboards_delete_elem_input"] = Field(
        alias="_delete_elem", default=None
    )
    delete_key: Optional["dashboards_delete_key_input"] = Field(
        alias="_delete_key", default=None
    )
    prepend: Optional["dashboards_prepend_input"] = Field(
        alias="_prepend", default=None
    )
    set: Optional["dashboards_set_input"] = Field(alias="_set", default=None)
    where: "dashboards_bool_exp"


class dataschemas_aggregate_bool_exp(BaseModel):
    count: Optional["dataschemas_aggregate_bool_exp_count"] = None


class dataschemas_aggregate_bool_exp_count(BaseModel):
    arguments: Optional[List[dataschemas_select_column]] = None
    distinct: Optional[bool] = None
    filter: Optional["dataschemas_bool_exp"] = None
    predicate: "Int_comparison_exp"


class dataschemas_aggregate_order_by(BaseModel):
    count: Optional[order_by] = None
    max: Optional["dataschemas_max_order_by"] = None
    min: Optional["dataschemas_min_order_by"] = None


class dataschemas_arr_rel_insert_input(BaseModel):
    data: List["dataschemas_insert_input"]
    on_conflict: Optional["dataschemas_on_conflict"] = None


class dataschemas_bool_exp(BaseModel):
    and_: Optional[List["dataschemas_bool_exp"]] = Field(alias="_and", default=None)
    not_: Optional["dataschemas_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["dataschemas_bool_exp"]] = Field(alias="_or", default=None)
    checksum: Optional["String_comparison_exp"] = None
    code: Optional["String_comparison_exp"] = None
    created_at: Optional["timestamptz_comparison_exp"] = None
    datasource: Optional["datasources_bool_exp"] = None
    datasource_id: Optional["uuid_comparison_exp"] = None
    id: Optional["uuid_comparison_exp"] = None
    name: Optional["String_comparison_exp"] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None
    user: Optional["users_bool_exp"] = None
    user_id: Optional["uuid_comparison_exp"] = None
    version: Optional["versions_bool_exp"] = None
    version_id: Optional["uuid_comparison_exp"] = None


class dataschemas_insert_input(BaseModel):
    checksum: Optional[str] = None
    code: Optional[str] = None
    created_at: Optional[Any] = None
    datasource: Optional["datasources_obj_rel_insert_input"] = None
    datasource_id: Optional[Any] = None
    id: Optional[Any] = None
    name: Optional[str] = None
    updated_at: Optional[Any] = None
    user: Optional["users_obj_rel_insert_input"] = None
    user_id: Optional[Any] = None
    version: Optional["versions_obj_rel_insert_input"] = None
    version_id: Optional[Any] = None


class dataschemas_max_order_by(BaseModel):
    checksum: Optional[order_by] = None
    code: Optional[order_by] = None
    created_at: Optional[order_by] = None
    datasource_id: Optional[order_by] = None
    id: Optional[order_by] = None
    name: Optional[order_by] = None
    updated_at: Optional[order_by] = None
    user_id: Optional[order_by] = None
    version_id: Optional[order_by] = None


class dataschemas_min_order_by(BaseModel):
    checksum: Optional[order_by] = None
    code: Optional[order_by] = None
    created_at: Optional[order_by] = None
    datasource_id: Optional[order_by] = None
    id: Optional[order_by] = None
    name: Optional[order_by] = None
    updated_at: Optional[order_by] = None
    user_id: Optional[order_by] = None
    version_id: Optional[order_by] = None


class dataschemas_on_conflict(BaseModel):
    constraint: dataschemas_constraint
    update_columns: List[dataschemas_update_column]
    where: Optional["dataschemas_bool_exp"] = None


class dataschemas_order_by(BaseModel):
    checksum: Optional[order_by] = None
    code: Optional[order_by] = None
    created_at: Optional[order_by] = None
    datasource: Optional["datasources_order_by"] = None
    datasource_id: Optional[order_by] = None
    id: Optional[order_by] = None
    name: Optional[order_by] = None
    updated_at: Optional[order_by] = None
    user: Optional["users_order_by"] = None
    user_id: Optional[order_by] = None
    version: Optional["versions_order_by"] = None
    version_id: Optional[order_by] = None


class dataschemas_pk_columns_input(BaseModel):
    id: Any


class dataschemas_set_input(BaseModel):
    checksum: Optional[str] = None
    code: Optional[str] = None
    created_at: Optional[Any] = None
    datasource_id: Optional[Any] = None
    id: Optional[Any] = None
    name: Optional[str] = None
    updated_at: Optional[Any] = None
    user_id: Optional[Any] = None
    version_id: Optional[Any] = None


class dataschemas_stream_cursor_input(BaseModel):
    initial_value: "dataschemas_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class dataschemas_stream_cursor_value_input(BaseModel):
    checksum: Optional[str] = None
    code: Optional[str] = None
    created_at: Optional[Any] = None
    datasource_id: Optional[Any] = None
    id: Optional[Any] = None
    name: Optional[str] = None
    updated_at: Optional[Any] = None
    user_id: Optional[Any] = None
    version_id: Optional[Any] = None


class dataschemas_updates(BaseModel):
    set: Optional["dataschemas_set_input"] = Field(alias="_set", default=None)
    where: "dataschemas_bool_exp"


class datasources_aggregate_bool_exp(BaseModel):
    count: Optional["datasources_aggregate_bool_exp_count"] = None


class datasources_aggregate_bool_exp_count(BaseModel):
    arguments: Optional[List[datasources_select_column]] = None
    distinct: Optional[bool] = None
    filter: Optional["datasources_bool_exp"] = None
    predicate: "Int_comparison_exp"


class datasources_aggregate_order_by(BaseModel):
    count: Optional[order_by] = None
    max: Optional["datasources_max_order_by"] = None
    min: Optional["datasources_min_order_by"] = None


class datasources_append_input(BaseModel):
    db_params: Optional[Any] = None


class datasources_arr_rel_insert_input(BaseModel):
    data: List["datasources_insert_input"]
    on_conflict: Optional["datasources_on_conflict"] = None


class datasources_bool_exp(BaseModel):
    and_: Optional[List["datasources_bool_exp"]] = Field(alias="_and", default=None)
    not_: Optional["datasources_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["datasources_bool_exp"]] = Field(alias="_or", default=None)
    branches: Optional["branches_bool_exp"] = None
    branches_aggregate: Optional["branches_aggregate_bool_exp"] = None
    created_at: Optional["timestamptz_comparison_exp"] = None
    dataschemas: Optional["dataschemas_bool_exp"] = None
    dataschemas_aggregate: Optional["dataschemas_aggregate_bool_exp"] = None
    db_params: Optional["jsonb_comparison_exp"] = None
    db_params_computed: Optional["jsonb_comparison_exp"] = None
    db_type: Optional["String_comparison_exp"] = None
    explorations: Optional["explorations_bool_exp"] = None
    explorations_aggregate: Optional["explorations_aggregate_bool_exp"] = None
    id: Optional["uuid_comparison_exp"] = None
    name: Optional["String_comparison_exp"] = None
    request_logs: Optional["request_logs_bool_exp"] = None
    request_logs_aggregate: Optional["request_logs_aggregate_bool_exp"] = None
    sql_credentials: Optional["sql_credentials_bool_exp"] = None
    sql_credentials_aggregate: Optional["sql_credentials_aggregate_bool_exp"] = None
    team: Optional["teams_bool_exp"] = None
    team_id: Optional["uuid_comparison_exp"] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None
    user: Optional["users_bool_exp"] = None
    user_id: Optional["uuid_comparison_exp"] = None


class datasources_delete_at_path_input(BaseModel):
    db_params: Optional[List[str]] = None


class datasources_delete_elem_input(BaseModel):
    db_params: Optional[int] = None


class datasources_delete_key_input(BaseModel):
    db_params: Optional[str] = None


class datasources_insert_input(BaseModel):
    branches: Optional["branches_arr_rel_insert_input"] = None
    created_at: Optional[Any] = None
    dataschemas: Optional["dataschemas_arr_rel_insert_input"] = None
    db_params: Optional[Any] = None
    db_type: Optional[str] = None
    explorations: Optional["explorations_arr_rel_insert_input"] = None
    id: Optional[Any] = None
    name: Optional[str] = None
    request_logs: Optional["request_logs_arr_rel_insert_input"] = None
    sql_credentials: Optional["sql_credentials_arr_rel_insert_input"] = None
    team: Optional["teams_obj_rel_insert_input"] = None
    team_id: Optional[Any] = None
    updated_at: Optional[Any] = None
    user: Optional["users_obj_rel_insert_input"] = None
    user_id: Optional[Any] = None


class datasources_max_order_by(BaseModel):
    created_at: Optional[order_by] = None
    db_type: Optional[order_by] = None
    id: Optional[order_by] = None
    name: Optional[order_by] = None
    team_id: Optional[order_by] = None
    updated_at: Optional[order_by] = None
    user_id: Optional[order_by] = None


class datasources_min_order_by(BaseModel):
    created_at: Optional[order_by] = None
    db_type: Optional[order_by] = None
    id: Optional[order_by] = None
    name: Optional[order_by] = None
    team_id: Optional[order_by] = None
    updated_at: Optional[order_by] = None
    user_id: Optional[order_by] = None


class datasources_obj_rel_insert_input(BaseModel):
    data: "datasources_insert_input"
    on_conflict: Optional["datasources_on_conflict"] = None


class datasources_on_conflict(BaseModel):
    constraint: datasources_constraint
    update_columns: List[datasources_update_column]
    where: Optional["datasources_bool_exp"] = None


class datasources_order_by(BaseModel):
    branches_aggregate: Optional["branches_aggregate_order_by"] = None
    created_at: Optional[order_by] = None
    dataschemas_aggregate: Optional["dataschemas_aggregate_order_by"] = None
    db_params: Optional[order_by] = None
    db_params_computed: Optional[order_by] = None
    db_type: Optional[order_by] = None
    explorations_aggregate: Optional["explorations_aggregate_order_by"] = None
    id: Optional[order_by] = None
    name: Optional[order_by] = None
    request_logs_aggregate: Optional["request_logs_aggregate_order_by"] = None
    sql_credentials_aggregate: Optional["sql_credentials_aggregate_order_by"] = None
    team: Optional["teams_order_by"] = None
    team_id: Optional[order_by] = None
    updated_at: Optional[order_by] = None
    user: Optional["users_order_by"] = None
    user_id: Optional[order_by] = None


class datasources_pk_columns_input(BaseModel):
    id: Any


class datasources_prepend_input(BaseModel):
    db_params: Optional[Any] = None


class datasources_set_input(BaseModel):
    created_at: Optional[Any] = None
    db_params: Optional[Any] = None
    db_type: Optional[str] = None
    id: Optional[Any] = None
    name: Optional[str] = None
    team_id: Optional[Any] = None
    updated_at: Optional[Any] = None
    user_id: Optional[Any] = None


class datasources_stream_cursor_input(BaseModel):
    initial_value: "datasources_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class datasources_stream_cursor_value_input(BaseModel):
    created_at: Optional[Any] = None
    db_params: Optional[Any] = None
    db_type: Optional[str] = None
    id: Optional[Any] = None
    name: Optional[str] = None
    team_id: Optional[Any] = None
    updated_at: Optional[Any] = None
    user_id: Optional[Any] = None


class datasources_updates(BaseModel):
    append: Optional["datasources_append_input"] = Field(alias="_append", default=None)
    delete_at_path: Optional["datasources_delete_at_path_input"] = Field(
        alias="_delete_at_path", default=None
    )
    delete_elem: Optional["datasources_delete_elem_input"] = Field(
        alias="_delete_elem", default=None
    )
    delete_key: Optional["datasources_delete_key_input"] = Field(
        alias="_delete_key", default=None
    )
    prepend: Optional["datasources_prepend_input"] = Field(
        alias="_prepend", default=None
    )
    set: Optional["datasources_set_input"] = Field(alias="_set", default=None)
    where: "datasources_bool_exp"


class events_append_input(BaseModel):
    data: Optional[Any] = None
    device_context: Optional[Any] = None
    page_context: Optional[Any] = None
    user: Optional[Any] = None


class events_bool_exp(BaseModel):
    and_: Optional[List["events_bool_exp"]] = Field(alias="_and", default=None)
    not_: Optional["events_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["events_bool_exp"]] = Field(alias="_or", default=None)
    created_at: Optional["timestamptz_comparison_exp"] = None
    data: Optional["jsonb_comparison_exp"] = None
    device_context: Optional["jsonb_comparison_exp"] = None
    id: Optional["uuid_comparison_exp"] = None
    page_context: Optional["jsonb_comparison_exp"] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None
    user: Optional["jsonb_comparison_exp"] = None


class events_create_input(BaseModel):
    data: Any
    device_context: Optional[Any] = None
    page_context: Optional[Any] = None
    user: Any


class events_delete_at_path_input(BaseModel):
    data: Optional[List[str]] = None
    device_context: Optional[List[str]] = None
    page_context: Optional[List[str]] = None
    user: Optional[List[str]] = None


class events_delete_elem_input(BaseModel):
    data: Optional[int] = None
    device_context: Optional[int] = None
    page_context: Optional[int] = None
    user: Optional[int] = None


class events_delete_key_input(BaseModel):
    data: Optional[str] = None
    device_context: Optional[str] = None
    page_context: Optional[str] = None
    user: Optional[str] = None


class events_insert_input(BaseModel):
    created_at: Optional[Any] = None
    data: Optional[Any] = None
    device_context: Optional[Any] = None
    id: Optional[Any] = None
    page_context: Optional[Any] = None
    updated_at: Optional[Any] = None
    user: Optional[Any] = None


class events_on_conflict(BaseModel):
    constraint: events_constraint
    update_columns: List[events_update_column]
    where: Optional["events_bool_exp"] = None


class events_order_by(BaseModel):
    created_at: Optional[order_by] = None
    data: Optional[order_by] = None
    device_context: Optional[order_by] = None
    id: Optional[order_by] = None
    page_context: Optional[order_by] = None
    updated_at: Optional[order_by] = None
    user: Optional[order_by] = None


class events_pk_columns_input(BaseModel):
    id: Any


class events_prepend_input(BaseModel):
    data: Optional[Any] = None
    device_context: Optional[Any] = None
    page_context: Optional[Any] = None
    user: Optional[Any] = None


class events_set_input(BaseModel):
    created_at: Optional[Any] = None
    data: Optional[Any] = None
    device_context: Optional[Any] = None
    id: Optional[Any] = None
    page_context: Optional[Any] = None
    updated_at: Optional[Any] = None
    user: Optional[Any] = None


class events_stream_cursor_input(BaseModel):
    initial_value: "events_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class events_stream_cursor_value_input(BaseModel):
    created_at: Optional[Any] = None
    data: Optional[Any] = None
    device_context: Optional[Any] = None
    id: Optional[Any] = None
    page_context: Optional[Any] = None
    updated_at: Optional[Any] = None
    user: Optional[Any] = None


class events_updates(BaseModel):
    append: Optional["events_append_input"] = Field(alias="_append", default=None)
    delete_at_path: Optional["events_delete_at_path_input"] = Field(
        alias="_delete_at_path", default=None
    )
    delete_elem: Optional["events_delete_elem_input"] = Field(
        alias="_delete_elem", default=None
    )
    delete_key: Optional["events_delete_key_input"] = Field(
        alias="_delete_key", default=None
    )
    prepend: Optional["events_prepend_input"] = Field(alias="_prepend", default=None)
    set: Optional["events_set_input"] = Field(alias="_set", default=None)
    where: "events_bool_exp"


class explorations_aggregate_bool_exp(BaseModel):
    count: Optional["explorations_aggregate_bool_exp_count"] = None


class explorations_aggregate_bool_exp_count(BaseModel):
    arguments: Optional[List[explorations_select_column]] = None
    distinct: Optional[bool] = None
    filter: Optional["explorations_bool_exp"] = None
    predicate: "Int_comparison_exp"


class explorations_aggregate_order_by(BaseModel):
    count: Optional[order_by] = None
    max: Optional["explorations_max_order_by"] = None
    min: Optional["explorations_min_order_by"] = None


class explorations_append_input(BaseModel):
    playground_settings: Optional[Any] = None
    playground_state: Optional[Any] = None


class explorations_arr_rel_insert_input(BaseModel):
    data: List["explorations_insert_input"]
    on_conflict: Optional["explorations_on_conflict"] = None


class explorations_bool_exp(BaseModel):
    and_: Optional[List["explorations_bool_exp"]] = Field(alias="_and", default=None)
    not_: Optional["explorations_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["explorations_bool_exp"]] = Field(alias="_or", default=None)
    alerts: Optional["alerts_bool_exp"] = None
    alerts_aggregate: Optional["alerts_aggregate_bool_exp"] = None
    branch: Optional["branches_bool_exp"] = None
    branch_id: Optional["uuid_comparison_exp"] = None
    created_at: Optional["timestamptz_comparison_exp"] = None
    datasource: Optional["datasources_bool_exp"] = None
    datasource_id: Optional["uuid_comparison_exp"] = None
    id: Optional["uuid_comparison_exp"] = None
    pinned_items: Optional["pinned_items_bool_exp"] = None
    pinned_items_aggregate: Optional["pinned_items_aggregate_bool_exp"] = None
    playground_settings: Optional["jsonb_comparison_exp"] = None
    playground_state: Optional["jsonb_comparison_exp"] = None
    reports: Optional["reports_bool_exp"] = None
    reports_aggregate: Optional["reports_aggregate_bool_exp"] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None
    user_id: Optional["uuid_comparison_exp"] = None


class explorations_delete_at_path_input(BaseModel):
    playground_settings: Optional[List[str]] = None
    playground_state: Optional[List[str]] = None


class explorations_delete_elem_input(BaseModel):
    playground_settings: Optional[int] = None
    playground_state: Optional[int] = None


class explorations_delete_key_input(BaseModel):
    playground_settings: Optional[str] = None
    playground_state: Optional[str] = None


class explorations_insert_input(BaseModel):
    alerts: Optional["alerts_arr_rel_insert_input"] = None
    branch: Optional["branches_obj_rel_insert_input"] = None
    branch_id: Optional[Any] = None
    created_at: Optional[Any] = None
    datasource: Optional["datasources_obj_rel_insert_input"] = None
    datasource_id: Optional[Any] = None
    id: Optional[Any] = None
    pinned_items: Optional["pinned_items_arr_rel_insert_input"] = None
    playground_settings: Optional[Any] = None
    playground_state: Optional[Any] = None
    reports: Optional["reports_arr_rel_insert_input"] = None
    updated_at: Optional[Any] = None
    user_id: Optional[Any] = None


class explorations_max_order_by(BaseModel):
    branch_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    datasource_id: Optional[order_by] = None
    id: Optional[order_by] = None
    updated_at: Optional[order_by] = None
    user_id: Optional[order_by] = None


class explorations_min_order_by(BaseModel):
    branch_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    datasource_id: Optional[order_by] = None
    id: Optional[order_by] = None
    updated_at: Optional[order_by] = None
    user_id: Optional[order_by] = None


class explorations_obj_rel_insert_input(BaseModel):
    data: "explorations_insert_input"
    on_conflict: Optional["explorations_on_conflict"] = None


class explorations_on_conflict(BaseModel):
    constraint: explorations_constraint
    update_columns: List[explorations_update_column]
    where: Optional["explorations_bool_exp"] = None


class explorations_order_by(BaseModel):
    alerts_aggregate: Optional["alerts_aggregate_order_by"] = None
    branch: Optional["branches_order_by"] = None
    branch_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    datasource: Optional["datasources_order_by"] = None
    datasource_id: Optional[order_by] = None
    id: Optional[order_by] = None
    pinned_items_aggregate: Optional["pinned_items_aggregate_order_by"] = None
    playground_settings: Optional[order_by] = None
    playground_state: Optional[order_by] = None
    reports_aggregate: Optional["reports_aggregate_order_by"] = None
    updated_at: Optional[order_by] = None
    user_id: Optional[order_by] = None


class explorations_pk_columns_input(BaseModel):
    id: Any


class explorations_prepend_input(BaseModel):
    playground_settings: Optional[Any] = None
    playground_state: Optional[Any] = None


class explorations_set_input(BaseModel):
    branch_id: Optional[Any] = None
    created_at: Optional[Any] = None
    datasource_id: Optional[Any] = None
    id: Optional[Any] = None
    playground_settings: Optional[Any] = None
    playground_state: Optional[Any] = None
    updated_at: Optional[Any] = None
    user_id: Optional[Any] = None


class explorations_stream_cursor_input(BaseModel):
    initial_value: "explorations_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class explorations_stream_cursor_value_input(BaseModel):
    branch_id: Optional[Any] = None
    created_at: Optional[Any] = None
    datasource_id: Optional[Any] = None
    id: Optional[Any] = None
    playground_settings: Optional[Any] = None
    playground_state: Optional[Any] = None
    updated_at: Optional[Any] = None
    user_id: Optional[Any] = None


class explorations_updates(BaseModel):
    append: Optional["explorations_append_input"] = Field(alias="_append", default=None)
    delete_at_path: Optional["explorations_delete_at_path_input"] = Field(
        alias="_delete_at_path", default=None
    )
    delete_elem: Optional["explorations_delete_elem_input"] = Field(
        alias="_delete_elem", default=None
    )
    delete_key: Optional["explorations_delete_key_input"] = Field(
        alias="_delete_key", default=None
    )
    prepend: Optional["explorations_prepend_input"] = Field(
        alias="_prepend", default=None
    )
    set: Optional["explorations_set_input"] = Field(alias="_set", default=None)
    where: "explorations_bool_exp"


class float8_comparison_exp(BaseModel):
    eq: Optional[Any] = Field(alias="_eq", default=None)
    gt: Optional[Any] = Field(alias="_gt", default=None)
    gte: Optional[Any] = Field(alias="_gte", default=None)
    in_: Optional[List[Any]] = Field(alias="_in", default=None)
    is_null: Optional[bool] = Field(alias="_is_null", default=None)
    lt: Optional[Any] = Field(alias="_lt", default=None)
    lte: Optional[Any] = Field(alias="_lte", default=None)
    neq: Optional[Any] = Field(alias="_neq", default=None)
    nin: Optional[List[Any]] = Field(alias="_nin", default=None)


class jsonb_cast_exp(BaseModel):
    string: Optional["String_comparison_exp"] = Field(alias="String", default=None)


class jsonb_comparison_exp(BaseModel):
    cast: Optional["jsonb_cast_exp"] = Field(alias="_cast", default=None)
    contained_in: Optional[Any] = Field(alias="_contained_in", default=None)
    contains: Optional[Any] = Field(alias="_contains", default=None)
    eq: Optional[Any] = Field(alias="_eq", default=None)
    gt: Optional[Any] = Field(alias="_gt", default=None)
    gte: Optional[Any] = Field(alias="_gte", default=None)
    has_key: Optional[str] = Field(alias="_has_key", default=None)
    has_keys_all: Optional[List[str]] = Field(alias="_has_keys_all", default=None)
    has_keys_any: Optional[List[str]] = Field(alias="_has_keys_any", default=None)
    in_: Optional[List[Any]] = Field(alias="_in", default=None)
    is_null: Optional[bool] = Field(alias="_is_null", default=None)
    lt: Optional[Any] = Field(alias="_lt", default=None)
    lte: Optional[Any] = Field(alias="_lte", default=None)
    neq: Optional[Any] = Field(alias="_neq", default=None)
    nin: Optional[List[Any]] = Field(alias="_nin", default=None)


class member_roles_aggregate_bool_exp(BaseModel):
    count: Optional["member_roles_aggregate_bool_exp_count"] = None


class member_roles_aggregate_bool_exp_count(BaseModel):
    arguments: Optional[List[member_roles_select_column]] = None
    distinct: Optional[bool] = None
    filter: Optional["member_roles_bool_exp"] = None
    predicate: "Int_comparison_exp"


class member_roles_aggregate_order_by(BaseModel):
    count: Optional[order_by] = None
    max: Optional["member_roles_max_order_by"] = None
    min: Optional["member_roles_min_order_by"] = None


class member_roles_arr_rel_insert_input(BaseModel):
    data: List["member_roles_insert_input"]
    on_conflict: Optional["member_roles_on_conflict"] = None


class member_roles_bool_exp(BaseModel):
    and_: Optional[List["member_roles_bool_exp"]] = Field(alias="_and", default=None)
    not_: Optional["member_roles_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["member_roles_bool_exp"]] = Field(alias="_or", default=None)
    access_list: Optional["access_lists_bool_exp"] = None
    access_list_id: Optional["uuid_comparison_exp"] = None
    created_at: Optional["timestamptz_comparison_exp"] = None
    id: Optional["uuid_comparison_exp"] = None
    member: Optional["members_bool_exp"] = None
    member_id: Optional["uuid_comparison_exp"] = None
    team_role_by_team_role: Optional["team_roles_bool_exp"] = Field(
        alias="teamRoleByTeamRole", default=None
    )
    team_role: Optional["team_roles_enum_comparison_exp"] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None


class member_roles_insert_input(BaseModel):
    access_list: Optional["access_lists_obj_rel_insert_input"] = None
    access_list_id: Optional[Any] = None
    created_at: Optional[Any] = None
    id: Optional[Any] = None
    member: Optional["members_obj_rel_insert_input"] = None
    member_id: Optional[Any] = None
    team_role_by_team_role: Optional["team_roles_obj_rel_insert_input"] = Field(
        alias="teamRoleByTeamRole", default=None
    )
    team_role: Optional[team_roles_enum] = None
    updated_at: Optional[Any] = None


class member_roles_max_order_by(BaseModel):
    access_list_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    id: Optional[order_by] = None
    member_id: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class member_roles_min_order_by(BaseModel):
    access_list_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    id: Optional[order_by] = None
    member_id: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class member_roles_on_conflict(BaseModel):
    constraint: member_roles_constraint
    update_columns: List[member_roles_update_column]
    where: Optional["member_roles_bool_exp"] = None


class member_roles_order_by(BaseModel):
    access_list: Optional["access_lists_order_by"] = None
    access_list_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    id: Optional[order_by] = None
    member: Optional["members_order_by"] = None
    member_id: Optional[order_by] = None
    team_role_by_team_role: Optional["team_roles_order_by"] = Field(
        alias="teamRoleByTeamRole", default=None
    )
    team_role: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class member_roles_pk_columns_input(BaseModel):
    id: Any


class member_roles_set_input(BaseModel):
    access_list_id: Optional[Any] = None
    created_at: Optional[Any] = None
    id: Optional[Any] = None
    member_id: Optional[Any] = None
    team_role: Optional[team_roles_enum] = None
    updated_at: Optional[Any] = None


class member_roles_stream_cursor_input(BaseModel):
    initial_value: "member_roles_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class member_roles_stream_cursor_value_input(BaseModel):
    access_list_id: Optional[Any] = None
    created_at: Optional[Any] = None
    id: Optional[Any] = None
    member_id: Optional[Any] = None
    team_role: Optional[team_roles_enum] = None
    updated_at: Optional[Any] = None


class member_roles_updates(BaseModel):
    set: Optional["member_roles_set_input"] = Field(alias="_set", default=None)
    where: "member_roles_bool_exp"


class members_aggregate_bool_exp(BaseModel):
    count: Optional["members_aggregate_bool_exp_count"] = None


class members_aggregate_bool_exp_count(BaseModel):
    arguments: Optional[List[members_select_column]] = None
    distinct: Optional[bool] = None
    filter: Optional["members_bool_exp"] = None
    predicate: "Int_comparison_exp"


class members_aggregate_order_by(BaseModel):
    count: Optional[order_by] = None
    max: Optional["members_max_order_by"] = None
    min: Optional["members_min_order_by"] = None


class members_arr_rel_insert_input(BaseModel):
    data: List["members_insert_input"]
    on_conflict: Optional["members_on_conflict"] = None


class members_bool_exp(BaseModel):
    and_: Optional[List["members_bool_exp"]] = Field(alias="_and", default=None)
    not_: Optional["members_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["members_bool_exp"]] = Field(alias="_or", default=None)
    created_at: Optional["timestamptz_comparison_exp"] = None
    id: Optional["uuid_comparison_exp"] = None
    member_roles: Optional["member_roles_bool_exp"] = None
    member_roles_aggregate: Optional["member_roles_aggregate_bool_exp"] = None
    team: Optional["teams_bool_exp"] = None
    team_id: Optional["uuid_comparison_exp"] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None
    user: Optional["users_bool_exp"] = None
    user_id: Optional["uuid_comparison_exp"] = None


class members_insert_input(BaseModel):
    created_at: Optional[Any] = None
    id: Optional[Any] = None
    member_roles: Optional["member_roles_arr_rel_insert_input"] = None
    team: Optional["teams_obj_rel_insert_input"] = None
    team_id: Optional[Any] = None
    updated_at: Optional[Any] = None
    user: Optional["users_obj_rel_insert_input"] = None
    user_id: Optional[Any] = None


class members_max_order_by(BaseModel):
    created_at: Optional[order_by] = None
    id: Optional[order_by] = None
    team_id: Optional[order_by] = None
    updated_at: Optional[order_by] = None
    user_id: Optional[order_by] = None


class members_min_order_by(BaseModel):
    created_at: Optional[order_by] = None
    id: Optional[order_by] = None
    team_id: Optional[order_by] = None
    updated_at: Optional[order_by] = None
    user_id: Optional[order_by] = None


class members_obj_rel_insert_input(BaseModel):
    data: "members_insert_input"
    on_conflict: Optional["members_on_conflict"] = None


class members_on_conflict(BaseModel):
    constraint: members_constraint
    update_columns: List[members_update_column]
    where: Optional["members_bool_exp"] = None


class members_order_by(BaseModel):
    created_at: Optional[order_by] = None
    id: Optional[order_by] = None
    member_roles_aggregate: Optional["member_roles_aggregate_order_by"] = None
    team: Optional["teams_order_by"] = None
    team_id: Optional[order_by] = None
    updated_at: Optional[order_by] = None
    user: Optional["users_order_by"] = None
    user_id: Optional[order_by] = None


class members_pk_columns_input(BaseModel):
    id: Any


class members_set_input(BaseModel):
    created_at: Optional[Any] = None
    id: Optional[Any] = None
    team_id: Optional[Any] = None
    updated_at: Optional[Any] = None
    user_id: Optional[Any] = None


class members_stream_cursor_input(BaseModel):
    initial_value: "members_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class members_stream_cursor_value_input(BaseModel):
    created_at: Optional[Any] = None
    id: Optional[Any] = None
    team_id: Optional[Any] = None
    updated_at: Optional[Any] = None
    user_id: Optional[Any] = None


class members_updates(BaseModel):
    set: Optional["members_set_input"] = Field(alias="_set", default=None)
    where: "members_bool_exp"


class numeric_comparison_exp(BaseModel):
    eq: Optional[Any] = Field(alias="_eq", default=None)
    gt: Optional[Any] = Field(alias="_gt", default=None)
    gte: Optional[Any] = Field(alias="_gte", default=None)
    in_: Optional[List[Any]] = Field(alias="_in", default=None)
    is_null: Optional[bool] = Field(alias="_is_null", default=None)
    lt: Optional[Any] = Field(alias="_lt", default=None)
    lte: Optional[Any] = Field(alias="_lte", default=None)
    neq: Optional[Any] = Field(alias="_neq", default=None)
    nin: Optional[List[Any]] = Field(alias="_nin", default=None)


class pinned_items_aggregate_bool_exp(BaseModel):
    count: Optional["pinned_items_aggregate_bool_exp_count"] = None


class pinned_items_aggregate_bool_exp_count(BaseModel):
    arguments: Optional[List[pinned_items_select_column]] = None
    distinct: Optional[bool] = None
    filter: Optional["pinned_items_bool_exp"] = None
    predicate: "Int_comparison_exp"


class pinned_items_aggregate_order_by(BaseModel):
    count: Optional[order_by] = None
    max: Optional["pinned_items_max_order_by"] = None
    min: Optional["pinned_items_min_order_by"] = None


class pinned_items_append_input(BaseModel):
    spec: Optional[Any] = None
    spec_config: Optional[Any] = None


class pinned_items_arr_rel_insert_input(BaseModel):
    data: List["pinned_items_insert_input"]
    on_conflict: Optional["pinned_items_on_conflict"] = None


class pinned_items_bool_exp(BaseModel):
    and_: Optional[List["pinned_items_bool_exp"]] = Field(alias="_and", default=None)
    not_: Optional["pinned_items_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["pinned_items_bool_exp"]] = Field(alias="_or", default=None)
    created_at: Optional["timestamptz_comparison_exp"] = None
    dashboard: Optional["dashboards_bool_exp"] = None
    dashboard_id: Optional["uuid_comparison_exp"] = None
    exploration: Optional["explorations_bool_exp"] = None
    exploration_id: Optional["uuid_comparison_exp"] = None
    id: Optional["uuid_comparison_exp"] = None
    name: Optional["String_comparison_exp"] = None
    spec: Optional["jsonb_comparison_exp"] = None
    spec_config: Optional["jsonb_comparison_exp"] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None
    user_id: Optional["uuid_comparison_exp"] = None


class pinned_items_delete_at_path_input(BaseModel):
    spec: Optional[List[str]] = None
    spec_config: Optional[List[str]] = None


class pinned_items_delete_elem_input(BaseModel):
    spec: Optional[int] = None
    spec_config: Optional[int] = None


class pinned_items_delete_key_input(BaseModel):
    spec: Optional[str] = None
    spec_config: Optional[str] = None


class pinned_items_insert_input(BaseModel):
    created_at: Optional[Any] = None
    dashboard: Optional["dashboards_obj_rel_insert_input"] = None
    dashboard_id: Optional[Any] = None
    exploration: Optional["explorations_obj_rel_insert_input"] = None
    exploration_id: Optional[Any] = None
    id: Optional[Any] = None
    name: Optional[str] = None
    spec: Optional[Any] = None
    spec_config: Optional[Any] = None
    updated_at: Optional[Any] = None
    user_id: Optional[Any] = None


class pinned_items_max_order_by(BaseModel):
    created_at: Optional[order_by] = None
    dashboard_id: Optional[order_by] = None
    exploration_id: Optional[order_by] = None
    id: Optional[order_by] = None
    name: Optional[order_by] = None
    updated_at: Optional[order_by] = None
    user_id: Optional[order_by] = None


class pinned_items_min_order_by(BaseModel):
    created_at: Optional[order_by] = None
    dashboard_id: Optional[order_by] = None
    exploration_id: Optional[order_by] = None
    id: Optional[order_by] = None
    name: Optional[order_by] = None
    updated_at: Optional[order_by] = None
    user_id: Optional[order_by] = None


class pinned_items_on_conflict(BaseModel):
    constraint: pinned_items_constraint
    update_columns: List[pinned_items_update_column]
    where: Optional["pinned_items_bool_exp"] = None


class pinned_items_order_by(BaseModel):
    created_at: Optional[order_by] = None
    dashboard: Optional["dashboards_order_by"] = None
    dashboard_id: Optional[order_by] = None
    exploration: Optional["explorations_order_by"] = None
    exploration_id: Optional[order_by] = None
    id: Optional[order_by] = None
    name: Optional[order_by] = None
    spec: Optional[order_by] = None
    spec_config: Optional[order_by] = None
    updated_at: Optional[order_by] = None
    user_id: Optional[order_by] = None


class pinned_items_pk_columns_input(BaseModel):
    id: Any


class pinned_items_prepend_input(BaseModel):
    spec: Optional[Any] = None
    spec_config: Optional[Any] = None


class pinned_items_set_input(BaseModel):
    created_at: Optional[Any] = None
    dashboard_id: Optional[Any] = None
    exploration_id: Optional[Any] = None
    id: Optional[Any] = None
    name: Optional[str] = None
    spec: Optional[Any] = None
    spec_config: Optional[Any] = None
    updated_at: Optional[Any] = None
    user_id: Optional[Any] = None


class pinned_items_stream_cursor_input(BaseModel):
    initial_value: "pinned_items_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class pinned_items_stream_cursor_value_input(BaseModel):
    created_at: Optional[Any] = None
    dashboard_id: Optional[Any] = None
    exploration_id: Optional[Any] = None
    id: Optional[Any] = None
    name: Optional[str] = None
    spec: Optional[Any] = None
    spec_config: Optional[Any] = None
    updated_at: Optional[Any] = None
    user_id: Optional[Any] = None


class pinned_items_updates(BaseModel):
    append: Optional["pinned_items_append_input"] = Field(alias="_append", default=None)
    delete_at_path: Optional["pinned_items_delete_at_path_input"] = Field(
        alias="_delete_at_path", default=None
    )
    delete_elem: Optional["pinned_items_delete_elem_input"] = Field(
        alias="_delete_elem", default=None
    )
    delete_key: Optional["pinned_items_delete_key_input"] = Field(
        alias="_delete_key", default=None
    )
    prepend: Optional["pinned_items_prepend_input"] = Field(
        alias="_prepend", default=None
    )
    set: Optional["pinned_items_set_input"] = Field(alias="_set", default=None)
    where: "pinned_items_bool_exp"


class reports_aggregate_bool_exp(BaseModel):
    count: Optional["reports_aggregate_bool_exp_count"] = None


class reports_aggregate_bool_exp_count(BaseModel):
    arguments: Optional[List[reports_select_column]] = None
    distinct: Optional[bool] = None
    filter: Optional["reports_bool_exp"] = None
    predicate: "Int_comparison_exp"


class reports_aggregate_order_by(BaseModel):
    count: Optional[order_by] = None
    max: Optional["reports_max_order_by"] = None
    min: Optional["reports_min_order_by"] = None


class reports_append_input(BaseModel):
    delivery_config: Optional[Any] = None


class reports_arr_rel_insert_input(BaseModel):
    data: List["reports_insert_input"]
    on_conflict: Optional["reports_on_conflict"] = None


class reports_bool_exp(BaseModel):
    and_: Optional[List["reports_bool_exp"]] = Field(alias="_and", default=None)
    not_: Optional["reports_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["reports_bool_exp"]] = Field(alias="_or", default=None)
    created_at: Optional["timestamptz_comparison_exp"] = None
    delivery_config: Optional["jsonb_comparison_exp"] = None
    delivery_type: Optional["String_comparison_exp"] = None
    exploration: Optional["explorations_bool_exp"] = None
    exploration_id: Optional["uuid_comparison_exp"] = None
    id: Optional["uuid_comparison_exp"] = None
    name: Optional["String_comparison_exp"] = None
    schedule: Optional["String_comparison_exp"] = None
    team: Optional["teams_bool_exp"] = None
    team_id: Optional["uuid_comparison_exp"] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None
    user: Optional["users_bool_exp"] = None
    user_id: Optional["uuid_comparison_exp"] = None


class reports_delete_at_path_input(BaseModel):
    delivery_config: Optional[List[str]] = None


class reports_delete_elem_input(BaseModel):
    delivery_config: Optional[int] = None


class reports_delete_key_input(BaseModel):
    delivery_config: Optional[str] = None


class reports_insert_input(BaseModel):
    created_at: Optional[Any] = None
    delivery_config: Optional[Any] = None
    delivery_type: Optional[str] = None
    exploration: Optional["explorations_obj_rel_insert_input"] = None
    exploration_id: Optional[Any] = None
    id: Optional[Any] = None
    name: Optional[str] = None
    schedule: Optional[str] = None
    team: Optional["teams_obj_rel_insert_input"] = None
    team_id: Optional[Any] = None
    updated_at: Optional[Any] = None
    user: Optional["users_obj_rel_insert_input"] = None
    user_id: Optional[Any] = None


class reports_max_order_by(BaseModel):
    created_at: Optional[order_by] = None
    delivery_type: Optional[order_by] = None
    exploration_id: Optional[order_by] = None
    id: Optional[order_by] = None
    name: Optional[order_by] = None
    schedule: Optional[order_by] = None
    team_id: Optional[order_by] = None
    updated_at: Optional[order_by] = None
    user_id: Optional[order_by] = None


class reports_min_order_by(BaseModel):
    created_at: Optional[order_by] = None
    delivery_type: Optional[order_by] = None
    exploration_id: Optional[order_by] = None
    id: Optional[order_by] = None
    name: Optional[order_by] = None
    schedule: Optional[order_by] = None
    team_id: Optional[order_by] = None
    updated_at: Optional[order_by] = None
    user_id: Optional[order_by] = None


class reports_on_conflict(BaseModel):
    constraint: reports_constraint
    update_columns: List[reports_update_column]
    where: Optional["reports_bool_exp"] = None


class reports_order_by(BaseModel):
    created_at: Optional[order_by] = None
    delivery_config: Optional[order_by] = None
    delivery_type: Optional[order_by] = None
    exploration: Optional["explorations_order_by"] = None
    exploration_id: Optional[order_by] = None
    id: Optional[order_by] = None
    name: Optional[order_by] = None
    schedule: Optional[order_by] = None
    team: Optional["teams_order_by"] = None
    team_id: Optional[order_by] = None
    updated_at: Optional[order_by] = None
    user: Optional["users_order_by"] = None
    user_id: Optional[order_by] = None


class reports_pk_columns_input(BaseModel):
    id: Any


class reports_prepend_input(BaseModel):
    delivery_config: Optional[Any] = None


class reports_set_input(BaseModel):
    created_at: Optional[Any] = None
    delivery_config: Optional[Any] = None
    delivery_type: Optional[str] = None
    exploration_id: Optional[Any] = None
    id: Optional[Any] = None
    name: Optional[str] = None
    schedule: Optional[str] = None
    team_id: Optional[Any] = None
    updated_at: Optional[Any] = None
    user_id: Optional[Any] = None


class reports_stream_cursor_input(BaseModel):
    initial_value: "reports_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class reports_stream_cursor_value_input(BaseModel):
    created_at: Optional[Any] = None
    delivery_config: Optional[Any] = None
    delivery_type: Optional[str] = None
    exploration_id: Optional[Any] = None
    id: Optional[Any] = None
    name: Optional[str] = None
    schedule: Optional[str] = None
    team_id: Optional[Any] = None
    updated_at: Optional[Any] = None
    user_id: Optional[Any] = None


class reports_updates(BaseModel):
    append: Optional["reports_append_input"] = Field(alias="_append", default=None)
    delete_at_path: Optional["reports_delete_at_path_input"] = Field(
        alias="_delete_at_path", default=None
    )
    delete_elem: Optional["reports_delete_elem_input"] = Field(
        alias="_delete_elem", default=None
    )
    delete_key: Optional["reports_delete_key_input"] = Field(
        alias="_delete_key", default=None
    )
    prepend: Optional["reports_prepend_input"] = Field(alias="_prepend", default=None)
    set: Optional["reports_set_input"] = Field(alias="_set", default=None)
    where: "reports_bool_exp"


class request_event_logs_aggregate_bool_exp(BaseModel):
    count: Optional["request_event_logs_aggregate_bool_exp_count"] = None


class request_event_logs_aggregate_bool_exp_count(BaseModel):
    arguments: Optional[List[request_event_logs_select_column]] = None
    distinct: Optional[bool] = None
    filter: Optional["request_event_logs_bool_exp"] = None
    predicate: "Int_comparison_exp"


class request_event_logs_aggregate_order_by(BaseModel):
    avg: Optional["request_event_logs_avg_order_by"] = None
    count: Optional[order_by] = None
    max: Optional["request_event_logs_max_order_by"] = None
    min: Optional["request_event_logs_min_order_by"] = None
    stddev: Optional["request_event_logs_stddev_order_by"] = None
    stddev_pop: Optional["request_event_logs_stddev_pop_order_by"] = None
    stddev_samp: Optional["request_event_logs_stddev_samp_order_by"] = None
    sum: Optional["request_event_logs_sum_order_by"] = None
    var_pop: Optional["request_event_logs_var_pop_order_by"] = None
    var_samp: Optional["request_event_logs_var_samp_order_by"] = None
    variance: Optional["request_event_logs_variance_order_by"] = None


class request_event_logs_append_input(BaseModel):
    query: Optional[Any] = None
    query_key: Optional[Any] = None


class request_event_logs_arr_rel_insert_input(BaseModel):
    data: List["request_event_logs_insert_input"]
    on_conflict: Optional["request_event_logs_on_conflict"] = None


class request_event_logs_avg_order_by(BaseModel):
    duration: Optional[order_by] = None
    time_in_queue: Optional[order_by] = None


class request_event_logs_bool_exp(BaseModel):
    and_: Optional[List["request_event_logs_bool_exp"]] = Field(
        alias="_and", default=None
    )
    not_: Optional["request_event_logs_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["request_event_logs_bool_exp"]] = Field(
        alias="_or", default=None
    )
    created_at: Optional["timestamptz_comparison_exp"] = None
    duration: Optional["numeric_comparison_exp"] = None
    error: Optional["String_comparison_exp"] = None
    event: Optional["String_comparison_exp"] = None
    id: Optional["uuid_comparison_exp"] = None
    path: Optional["String_comparison_exp"] = None
    query: Optional["jsonb_comparison_exp"] = None
    query_key: Optional["jsonb_comparison_exp"] = None
    query_key_md_5: Optional["String_comparison_exp"] = Field(
        alias="query_key_md5", default=None
    )
    query_sql: Optional["String_comparison_exp"] = None
    queue_prefix: Optional["String_comparison_exp"] = None
    request_id: Optional["String_comparison_exp"] = None
    request_log: Optional["request_logs_bool_exp"] = None
    time_in_queue: Optional["numeric_comparison_exp"] = None
    timestamp: Optional["timestamptz_comparison_exp"] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None


class request_event_logs_delete_at_path_input(BaseModel):
    query: Optional[List[str]] = None
    query_key: Optional[List[str]] = None


class request_event_logs_delete_elem_input(BaseModel):
    query: Optional[int] = None
    query_key: Optional[int] = None


class request_event_logs_delete_key_input(BaseModel):
    query: Optional[str] = None
    query_key: Optional[str] = None


class request_event_logs_inc_input(BaseModel):
    duration: Optional[Any] = None
    time_in_queue: Optional[Any] = None


class request_event_logs_insert_input(BaseModel):
    created_at: Optional[Any] = None
    duration: Optional[Any] = None
    error: Optional[str] = None
    event: Optional[str] = None
    id: Optional[Any] = None
    path: Optional[str] = None
    query: Optional[Any] = None
    query_key: Optional[Any] = None
    query_key_md_5: Optional[str] = Field(alias="query_key_md5", default=None)
    query_sql: Optional[str] = None
    queue_prefix: Optional[str] = None
    request_id: Optional[str] = None
    request_log: Optional["request_logs_obj_rel_insert_input"] = None
    time_in_queue: Optional[Any] = None
    timestamp: Optional[Any] = None
    updated_at: Optional[Any] = None


class request_event_logs_max_order_by(BaseModel):
    created_at: Optional[order_by] = None
    duration: Optional[order_by] = None
    error: Optional[order_by] = None
    event: Optional[order_by] = None
    id: Optional[order_by] = None
    path: Optional[order_by] = None
    query_key_md_5: Optional[order_by] = Field(alias="query_key_md5", default=None)
    query_sql: Optional[order_by] = None
    queue_prefix: Optional[order_by] = None
    request_id: Optional[order_by] = None
    time_in_queue: Optional[order_by] = None
    timestamp: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class request_event_logs_min_order_by(BaseModel):
    created_at: Optional[order_by] = None
    duration: Optional[order_by] = None
    error: Optional[order_by] = None
    event: Optional[order_by] = None
    id: Optional[order_by] = None
    path: Optional[order_by] = None
    query_key_md_5: Optional[order_by] = Field(alias="query_key_md5", default=None)
    query_sql: Optional[order_by] = None
    queue_prefix: Optional[order_by] = None
    request_id: Optional[order_by] = None
    time_in_queue: Optional[order_by] = None
    timestamp: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class request_event_logs_on_conflict(BaseModel):
    constraint: request_event_logs_constraint
    update_columns: List[request_event_logs_update_column]
    where: Optional["request_event_logs_bool_exp"] = None


class request_event_logs_order_by(BaseModel):
    created_at: Optional[order_by] = None
    duration: Optional[order_by] = None
    error: Optional[order_by] = None
    event: Optional[order_by] = None
    id: Optional[order_by] = None
    path: Optional[order_by] = None
    query: Optional[order_by] = None
    query_key: Optional[order_by] = None
    query_key_md_5: Optional[order_by] = Field(alias="query_key_md5", default=None)
    query_sql: Optional[order_by] = None
    queue_prefix: Optional[order_by] = None
    request_id: Optional[order_by] = None
    request_log: Optional["request_logs_order_by"] = None
    time_in_queue: Optional[order_by] = None
    timestamp: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class request_event_logs_pk_columns_input(BaseModel):
    id: Any


class request_event_logs_prepend_input(BaseModel):
    query: Optional[Any] = None
    query_key: Optional[Any] = None


class request_event_logs_set_input(BaseModel):
    created_at: Optional[Any] = None
    duration: Optional[Any] = None
    error: Optional[str] = None
    event: Optional[str] = None
    id: Optional[Any] = None
    path: Optional[str] = None
    query: Optional[Any] = None
    query_key: Optional[Any] = None
    query_key_md_5: Optional[str] = Field(alias="query_key_md5", default=None)
    query_sql: Optional[str] = None
    queue_prefix: Optional[str] = None
    request_id: Optional[str] = None
    time_in_queue: Optional[Any] = None
    timestamp: Optional[Any] = None
    updated_at: Optional[Any] = None


class request_event_logs_stddev_order_by(BaseModel):
    duration: Optional[order_by] = None
    time_in_queue: Optional[order_by] = None


class request_event_logs_stddev_pop_order_by(BaseModel):
    duration: Optional[order_by] = None
    time_in_queue: Optional[order_by] = None


class request_event_logs_stddev_samp_order_by(BaseModel):
    duration: Optional[order_by] = None
    time_in_queue: Optional[order_by] = None


class request_event_logs_stream_cursor_input(BaseModel):
    initial_value: "request_event_logs_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class request_event_logs_stream_cursor_value_input(BaseModel):
    created_at: Optional[Any] = None
    duration: Optional[Any] = None
    error: Optional[str] = None
    event: Optional[str] = None
    id: Optional[Any] = None
    path: Optional[str] = None
    query: Optional[Any] = None
    query_key: Optional[Any] = None
    query_key_md_5: Optional[str] = Field(alias="query_key_md5", default=None)
    query_sql: Optional[str] = None
    queue_prefix: Optional[str] = None
    request_id: Optional[str] = None
    time_in_queue: Optional[Any] = None
    timestamp: Optional[Any] = None
    updated_at: Optional[Any] = None


class request_event_logs_sum_order_by(BaseModel):
    duration: Optional[order_by] = None
    time_in_queue: Optional[order_by] = None


class request_event_logs_updates(BaseModel):
    append: Optional["request_event_logs_append_input"] = Field(
        alias="_append", default=None
    )
    delete_at_path: Optional["request_event_logs_delete_at_path_input"] = Field(
        alias="_delete_at_path", default=None
    )
    delete_elem: Optional["request_event_logs_delete_elem_input"] = Field(
        alias="_delete_elem", default=None
    )
    delete_key: Optional["request_event_logs_delete_key_input"] = Field(
        alias="_delete_key", default=None
    )
    inc: Optional["request_event_logs_inc_input"] = Field(alias="_inc", default=None)
    prepend: Optional["request_event_logs_prepend_input"] = Field(
        alias="_prepend", default=None
    )
    set: Optional["request_event_logs_set_input"] = Field(alias="_set", default=None)
    where: "request_event_logs_bool_exp"


class request_event_logs_var_pop_order_by(BaseModel):
    duration: Optional[order_by] = None
    time_in_queue: Optional[order_by] = None


class request_event_logs_var_samp_order_by(BaseModel):
    duration: Optional[order_by] = None
    time_in_queue: Optional[order_by] = None


class request_event_logs_variance_order_by(BaseModel):
    duration: Optional[order_by] = None
    time_in_queue: Optional[order_by] = None


class request_logs_aggregate_bool_exp(BaseModel):
    count: Optional["request_logs_aggregate_bool_exp_count"] = None


class request_logs_aggregate_bool_exp_count(BaseModel):
    arguments: Optional[List[request_logs_select_column]] = None
    distinct: Optional[bool] = None
    filter: Optional["request_logs_bool_exp"] = None
    predicate: "Int_comparison_exp"


class request_logs_aggregate_order_by(BaseModel):
    count: Optional[order_by] = None
    max: Optional["request_logs_max_order_by"] = None
    min: Optional["request_logs_min_order_by"] = None


class request_logs_arr_rel_insert_input(BaseModel):
    data: List["request_logs_insert_input"]
    on_conflict: Optional["request_logs_on_conflict"] = None


class request_logs_bool_exp(BaseModel):
    and_: Optional[List["request_logs_bool_exp"]] = Field(alias="_and", default=None)
    not_: Optional["request_logs_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["request_logs_bool_exp"]] = Field(alias="_or", default=None)
    created_at: Optional["timestamptz_comparison_exp"] = None
    datasource: Optional["datasources_bool_exp"] = None
    datasource_id: Optional["uuid_comparison_exp"] = None
    duration: Optional["float8_comparison_exp"] = None
    end_time: Optional["timestamptz_comparison_exp"] = None
    id: Optional["uuid_comparison_exp"] = None
    path: Optional["String_comparison_exp"] = None
    request_event_logs: Optional["request_event_logs_bool_exp"] = None
    request_event_logs_aggregate: Optional["request_event_logs_aggregate_bool_exp"] = (
        None
    )
    request_id: Optional["String_comparison_exp"] = None
    start_time: Optional["timestamptz_comparison_exp"] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None
    user: Optional["users_bool_exp"] = None
    user_id: Optional["uuid_comparison_exp"] = None


class request_logs_insert_input(BaseModel):
    created_at: Optional[Any] = None
    datasource: Optional["datasources_obj_rel_insert_input"] = None
    datasource_id: Optional[Any] = None
    end_time: Optional[Any] = None
    id: Optional[Any] = None
    path: Optional[str] = None
    request_event_logs: Optional["request_event_logs_arr_rel_insert_input"] = None
    request_id: Optional[str] = None
    start_time: Optional[Any] = None
    updated_at: Optional[Any] = None
    user: Optional["users_obj_rel_insert_input"] = None
    user_id: Optional[Any] = None


class request_logs_max_order_by(BaseModel):
    created_at: Optional[order_by] = None
    datasource_id: Optional[order_by] = None
    end_time: Optional[order_by] = None
    id: Optional[order_by] = None
    path: Optional[order_by] = None
    request_id: Optional[order_by] = None
    start_time: Optional[order_by] = None
    updated_at: Optional[order_by] = None
    user_id: Optional[order_by] = None


class request_logs_min_order_by(BaseModel):
    created_at: Optional[order_by] = None
    datasource_id: Optional[order_by] = None
    end_time: Optional[order_by] = None
    id: Optional[order_by] = None
    path: Optional[order_by] = None
    request_id: Optional[order_by] = None
    start_time: Optional[order_by] = None
    updated_at: Optional[order_by] = None
    user_id: Optional[order_by] = None


class request_logs_obj_rel_insert_input(BaseModel):
    data: "request_logs_insert_input"
    on_conflict: Optional["request_logs_on_conflict"] = None


class request_logs_on_conflict(BaseModel):
    constraint: request_logs_constraint
    update_columns: List[request_logs_update_column]
    where: Optional["request_logs_bool_exp"] = None


class request_logs_order_by(BaseModel):
    created_at: Optional[order_by] = None
    datasource: Optional["datasources_order_by"] = None
    datasource_id: Optional[order_by] = None
    duration: Optional[order_by] = None
    end_time: Optional[order_by] = None
    id: Optional[order_by] = None
    path: Optional[order_by] = None
    request_event_logs_aggregate: Optional["request_event_logs_aggregate_order_by"] = (
        None
    )
    request_id: Optional[order_by] = None
    start_time: Optional[order_by] = None
    updated_at: Optional[order_by] = None
    user: Optional["users_order_by"] = None
    user_id: Optional[order_by] = None


class request_logs_pk_columns_input(BaseModel):
    id: Any


class request_logs_set_input(BaseModel):
    created_at: Optional[Any] = None
    datasource_id: Optional[Any] = None
    end_time: Optional[Any] = None
    id: Optional[Any] = None
    path: Optional[str] = None
    request_id: Optional[str] = None
    start_time: Optional[Any] = None
    updated_at: Optional[Any] = None
    user_id: Optional[Any] = None


class request_logs_stream_cursor_input(BaseModel):
    initial_value: "request_logs_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class request_logs_stream_cursor_value_input(BaseModel):
    created_at: Optional[Any] = None
    datasource_id: Optional[Any] = None
    end_time: Optional[Any] = None
    id: Optional[Any] = None
    path: Optional[str] = None
    request_id: Optional[str] = None
    start_time: Optional[Any] = None
    updated_at: Optional[Any] = None
    user_id: Optional[Any] = None


class request_logs_updates(BaseModel):
    set: Optional["request_logs_set_input"] = Field(alias="_set", default=None)
    where: "request_logs_bool_exp"


class sql_credentials_aggregate_bool_exp(BaseModel):
    count: Optional["sql_credentials_aggregate_bool_exp_count"] = None


class sql_credentials_aggregate_bool_exp_count(BaseModel):
    arguments: Optional[List[sql_credentials_select_column]] = None
    distinct: Optional[bool] = None
    filter: Optional["sql_credentials_bool_exp"] = None
    predicate: "Int_comparison_exp"


class sql_credentials_aggregate_order_by(BaseModel):
    count: Optional[order_by] = None
    max: Optional["sql_credentials_max_order_by"] = None
    min: Optional["sql_credentials_min_order_by"] = None


class sql_credentials_arr_rel_insert_input(BaseModel):
    data: List["sql_credentials_insert_input"]
    on_conflict: Optional["sql_credentials_on_conflict"] = None


class sql_credentials_bool_exp(BaseModel):
    and_: Optional[List["sql_credentials_bool_exp"]] = Field(alias="_and", default=None)
    not_: Optional["sql_credentials_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["sql_credentials_bool_exp"]] = Field(alias="_or", default=None)
    created_at: Optional["timestamptz_comparison_exp"] = None
    datasource: Optional["datasources_bool_exp"] = None
    datasource_id: Optional["uuid_comparison_exp"] = None
    id: Optional["uuid_comparison_exp"] = None
    password: Optional["String_comparison_exp"] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None
    user: Optional["users_bool_exp"] = None
    user_id: Optional["uuid_comparison_exp"] = None
    username: Optional["String_comparison_exp"] = None


class sql_credentials_insert_input(BaseModel):
    created_at: Optional[Any] = None
    datasource: Optional["datasources_obj_rel_insert_input"] = None
    datasource_id: Optional[Any] = None
    id: Optional[Any] = None
    password: Optional[str] = None
    updated_at: Optional[Any] = None
    user: Optional["users_obj_rel_insert_input"] = None
    user_id: Optional[Any] = None
    username: Optional[str] = None


class sql_credentials_max_order_by(BaseModel):
    created_at: Optional[order_by] = None
    datasource_id: Optional[order_by] = None
    id: Optional[order_by] = None
    password: Optional[order_by] = None
    updated_at: Optional[order_by] = None
    user_id: Optional[order_by] = None
    username: Optional[order_by] = None


class sql_credentials_min_order_by(BaseModel):
    created_at: Optional[order_by] = None
    datasource_id: Optional[order_by] = None
    id: Optional[order_by] = None
    password: Optional[order_by] = None
    updated_at: Optional[order_by] = None
    user_id: Optional[order_by] = None
    username: Optional[order_by] = None


class sql_credentials_on_conflict(BaseModel):
    constraint: sql_credentials_constraint
    update_columns: List[sql_credentials_update_column]
    where: Optional["sql_credentials_bool_exp"] = None


class sql_credentials_order_by(BaseModel):
    created_at: Optional[order_by] = None
    datasource: Optional["datasources_order_by"] = None
    datasource_id: Optional[order_by] = None
    id: Optional[order_by] = None
    password: Optional[order_by] = None
    updated_at: Optional[order_by] = None
    user: Optional["users_order_by"] = None
    user_id: Optional[order_by] = None
    username: Optional[order_by] = None


class sql_credentials_pk_columns_input(BaseModel):
    id: Any


class sql_credentials_set_input(BaseModel):
    created_at: Optional[Any] = None
    datasource_id: Optional[Any] = None
    id: Optional[Any] = None
    password: Optional[str] = None
    updated_at: Optional[Any] = None
    user_id: Optional[Any] = None
    username: Optional[str] = None


class sql_credentials_stream_cursor_input(BaseModel):
    initial_value: "sql_credentials_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class sql_credentials_stream_cursor_value_input(BaseModel):
    created_at: Optional[Any] = None
    datasource_id: Optional[Any] = None
    id: Optional[Any] = None
    password: Optional[str] = None
    updated_at: Optional[Any] = None
    user_id: Optional[Any] = None
    username: Optional[str] = None


class sql_credentials_updates(BaseModel):
    set: Optional["sql_credentials_set_input"] = Field(alias="_set", default=None)
    where: "sql_credentials_bool_exp"


class team_roles_bool_exp(BaseModel):
    and_: Optional[List["team_roles_bool_exp"]] = Field(alias="_and", default=None)
    not_: Optional["team_roles_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["team_roles_bool_exp"]] = Field(alias="_or", default=None)
    member_roles: Optional["member_roles_bool_exp"] = None
    member_roles_aggregate: Optional["member_roles_aggregate_bool_exp"] = None
    name: Optional["String_comparison_exp"] = None


class team_roles_enum_comparison_exp(BaseModel):
    eq: Optional[team_roles_enum] = Field(alias="_eq", default=None)
    in_: Optional[List[team_roles_enum]] = Field(alias="_in", default=None)
    is_null: Optional[bool] = Field(alias="_is_null", default=None)
    neq: Optional[team_roles_enum] = Field(alias="_neq", default=None)
    nin: Optional[List[team_roles_enum]] = Field(alias="_nin", default=None)


class team_roles_insert_input(BaseModel):
    member_roles: Optional["member_roles_arr_rel_insert_input"] = None
    name: Optional[str] = None


class team_roles_obj_rel_insert_input(BaseModel):
    data: "team_roles_insert_input"
    on_conflict: Optional["team_roles_on_conflict"] = None


class team_roles_on_conflict(BaseModel):
    constraint: team_roles_constraint
    update_columns: List[team_roles_update_column]
    where: Optional["team_roles_bool_exp"] = None


class team_roles_order_by(BaseModel):
    member_roles_aggregate: Optional["member_roles_aggregate_order_by"] = None
    name: Optional[order_by] = None


class team_roles_pk_columns_input(BaseModel):
    name: str


class team_roles_set_input(BaseModel):
    name: Optional[str] = None


class team_roles_stream_cursor_input(BaseModel):
    initial_value: "team_roles_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class team_roles_stream_cursor_value_input(BaseModel):
    name: Optional[str] = None


class team_roles_updates(BaseModel):
    set: Optional["team_roles_set_input"] = Field(alias="_set", default=None)
    where: "team_roles_bool_exp"


class teams_aggregate_bool_exp(BaseModel):
    count: Optional["teams_aggregate_bool_exp_count"] = None


class teams_aggregate_bool_exp_count(BaseModel):
    arguments: Optional[List[teams_select_column]] = None
    distinct: Optional[bool] = None
    filter: Optional["teams_bool_exp"] = None
    predicate: "Int_comparison_exp"


class teams_aggregate_order_by(BaseModel):
    count: Optional[order_by] = None
    max: Optional["teams_max_order_by"] = None
    min: Optional["teams_min_order_by"] = None


class teams_arr_rel_insert_input(BaseModel):
    data: List["teams_insert_input"]
    on_conflict: Optional["teams_on_conflict"] = None


class teams_bool_exp(BaseModel):
    and_: Optional[List["teams_bool_exp"]] = Field(alias="_and", default=None)
    not_: Optional["teams_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["teams_bool_exp"]] = Field(alias="_or", default=None)
    access_lists: Optional["access_lists_bool_exp"] = None
    access_lists_aggregate: Optional["access_lists_aggregate_bool_exp"] = None
    alerts: Optional["alerts_bool_exp"] = None
    alerts_aggregate: Optional["alerts_aggregate_bool_exp"] = None
    created_at: Optional["timestamptz_comparison_exp"] = None
    dashboards: Optional["dashboards_bool_exp"] = None
    dashboards_aggregate: Optional["dashboards_aggregate_bool_exp"] = None
    datasources: Optional["datasources_bool_exp"] = None
    datasources_aggregate: Optional["datasources_aggregate_bool_exp"] = None
    id: Optional["uuid_comparison_exp"] = None
    members: Optional["members_bool_exp"] = None
    members_aggregate: Optional["members_aggregate_bool_exp"] = None
    name: Optional["String_comparison_exp"] = None
    reports: Optional["reports_bool_exp"] = None
    reports_aggregate: Optional["reports_aggregate_bool_exp"] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None
    user: Optional["users_bool_exp"] = None
    user_id: Optional["uuid_comparison_exp"] = None


class teams_insert_input(BaseModel):
    access_lists: Optional["access_lists_arr_rel_insert_input"] = None
    alerts: Optional["alerts_arr_rel_insert_input"] = None
    created_at: Optional[Any] = None
    dashboards: Optional["dashboards_arr_rel_insert_input"] = None
    datasources: Optional["datasources_arr_rel_insert_input"] = None
    id: Optional[Any] = None
    members: Optional["members_arr_rel_insert_input"] = None
    name: Optional[str] = None
    reports: Optional["reports_arr_rel_insert_input"] = None
    updated_at: Optional[Any] = None
    user: Optional["users_obj_rel_insert_input"] = None
    user_id: Optional[Any] = None


class teams_max_order_by(BaseModel):
    created_at: Optional[order_by] = None
    id: Optional[order_by] = None
    name: Optional[order_by] = None
    updated_at: Optional[order_by] = None
    user_id: Optional[order_by] = None


class teams_min_order_by(BaseModel):
    created_at: Optional[order_by] = None
    id: Optional[order_by] = None
    name: Optional[order_by] = None
    updated_at: Optional[order_by] = None
    user_id: Optional[order_by] = None


class teams_obj_rel_insert_input(BaseModel):
    data: "teams_insert_input"
    on_conflict: Optional["teams_on_conflict"] = None


class teams_on_conflict(BaseModel):
    constraint: teams_constraint
    update_columns: List[teams_update_column]
    where: Optional["teams_bool_exp"] = None


class teams_order_by(BaseModel):
    access_lists_aggregate: Optional["access_lists_aggregate_order_by"] = None
    alerts_aggregate: Optional["alerts_aggregate_order_by"] = None
    created_at: Optional[order_by] = None
    dashboards_aggregate: Optional["dashboards_aggregate_order_by"] = None
    datasources_aggregate: Optional["datasources_aggregate_order_by"] = None
    id: Optional[order_by] = None
    members_aggregate: Optional["members_aggregate_order_by"] = None
    name: Optional[order_by] = None
    reports_aggregate: Optional["reports_aggregate_order_by"] = None
    updated_at: Optional[order_by] = None
    user: Optional["users_order_by"] = None
    user_id: Optional[order_by] = None


class teams_pk_columns_input(BaseModel):
    id: Any


class teams_set_input(BaseModel):
    created_at: Optional[Any] = None
    id: Optional[Any] = None
    name: Optional[str] = None
    updated_at: Optional[Any] = None
    user_id: Optional[Any] = None


class teams_stream_cursor_input(BaseModel):
    initial_value: "teams_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class teams_stream_cursor_value_input(BaseModel):
    created_at: Optional[Any] = None
    id: Optional[Any] = None
    name: Optional[str] = None
    updated_at: Optional[Any] = None
    user_id: Optional[Any] = None


class teams_updates(BaseModel):
    set: Optional["teams_set_input"] = Field(alias="_set", default=None)
    where: "teams_bool_exp"


class timestamptz_comparison_exp(BaseModel):
    eq: Optional[Any] = Field(alias="_eq", default=None)
    gt: Optional[Any] = Field(alias="_gt", default=None)
    gte: Optional[Any] = Field(alias="_gte", default=None)
    in_: Optional[List[Any]] = Field(alias="_in", default=None)
    is_null: Optional[bool] = Field(alias="_is_null", default=None)
    lt: Optional[Any] = Field(alias="_lt", default=None)
    lte: Optional[Any] = Field(alias="_lte", default=None)
    neq: Optional[Any] = Field(alias="_neq", default=None)
    nin: Optional[List[Any]] = Field(alias="_nin", default=None)


class users_bool_exp(BaseModel):
    and_: Optional[List["users_bool_exp"]] = Field(alias="_and", default=None)
    not_: Optional["users_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["users_bool_exp"]] = Field(alias="_or", default=None)
    account: Optional["auth_accounts_bool_exp"] = None
    alerts: Optional["alerts_bool_exp"] = None
    alerts_aggregate: Optional["alerts_aggregate_bool_exp"] = None
    avatar_url: Optional["String_comparison_exp"] = None
    branches: Optional["branches_bool_exp"] = None
    branches_aggregate: Optional["branches_aggregate_bool_exp"] = None
    created_at: Optional["timestamptz_comparison_exp"] = None
    dataschemas: Optional["dataschemas_bool_exp"] = None
    dataschemas_aggregate: Optional["dataschemas_aggregate_bool_exp"] = None
    datasources: Optional["datasources_bool_exp"] = None
    datasources_aggregate: Optional["datasources_aggregate_bool_exp"] = None
    display_name: Optional["String_comparison_exp"] = None
    id: Optional["uuid_comparison_exp"] = None
    members: Optional["members_bool_exp"] = None
    members_aggregate: Optional["members_aggregate_bool_exp"] = None
    reports: Optional["reports_bool_exp"] = None
    reports_aggregate: Optional["reports_aggregate_bool_exp"] = None
    request_logs: Optional["request_logs_bool_exp"] = None
    request_logs_aggregate: Optional["request_logs_aggregate_bool_exp"] = None
    sql_credentials: Optional["sql_credentials_bool_exp"] = None
    sql_credentials_aggregate: Optional["sql_credentials_aggregate_bool_exp"] = None
    teams: Optional["teams_bool_exp"] = None
    teams_aggregate: Optional["teams_aggregate_bool_exp"] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None
    versions: Optional["versions_bool_exp"] = None
    versions_aggregate: Optional["versions_aggregate_bool_exp"] = None


class users_insert_input(BaseModel):
    account: Optional["auth_accounts_obj_rel_insert_input"] = None
    alerts: Optional["alerts_arr_rel_insert_input"] = None
    avatar_url: Optional[str] = None
    branches: Optional["branches_arr_rel_insert_input"] = None
    created_at: Optional[Any] = None
    dataschemas: Optional["dataschemas_arr_rel_insert_input"] = None
    datasources: Optional["datasources_arr_rel_insert_input"] = None
    display_name: Optional[str] = None
    id: Optional[Any] = None
    members: Optional["members_arr_rel_insert_input"] = None
    reports: Optional["reports_arr_rel_insert_input"] = None
    request_logs: Optional["request_logs_arr_rel_insert_input"] = None
    sql_credentials: Optional["sql_credentials_arr_rel_insert_input"] = None
    teams: Optional["teams_arr_rel_insert_input"] = None
    updated_at: Optional[Any] = None
    versions: Optional["versions_arr_rel_insert_input"] = None


class users_obj_rel_insert_input(BaseModel):
    data: "users_insert_input"
    on_conflict: Optional["users_on_conflict"] = None


class users_on_conflict(BaseModel):
    constraint: users_constraint
    update_columns: List[users_update_column]
    where: Optional["users_bool_exp"] = None


class users_order_by(BaseModel):
    account: Optional["auth_accounts_order_by"] = None
    alerts_aggregate: Optional["alerts_aggregate_order_by"] = None
    avatar_url: Optional[order_by] = None
    branches_aggregate: Optional["branches_aggregate_order_by"] = None
    created_at: Optional[order_by] = None
    dataschemas_aggregate: Optional["dataschemas_aggregate_order_by"] = None
    datasources_aggregate: Optional["datasources_aggregate_order_by"] = None
    display_name: Optional[order_by] = None
    id: Optional[order_by] = None
    members_aggregate: Optional["members_aggregate_order_by"] = None
    reports_aggregate: Optional["reports_aggregate_order_by"] = None
    request_logs_aggregate: Optional["request_logs_aggregate_order_by"] = None
    sql_credentials_aggregate: Optional["sql_credentials_aggregate_order_by"] = None
    teams_aggregate: Optional["teams_aggregate_order_by"] = None
    updated_at: Optional[order_by] = None
    versions_aggregate: Optional["versions_aggregate_order_by"] = None


class users_pk_columns_input(BaseModel):
    id: Any


class users_set_input(BaseModel):
    avatar_url: Optional[str] = None
    created_at: Optional[Any] = None
    display_name: Optional[str] = None
    id: Optional[Any] = None
    updated_at: Optional[Any] = None


class users_stream_cursor_input(BaseModel):
    initial_value: "users_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class users_stream_cursor_value_input(BaseModel):
    avatar_url: Optional[str] = None
    created_at: Optional[Any] = None
    display_name: Optional[str] = None
    id: Optional[Any] = None
    updated_at: Optional[Any] = None


class users_updates(BaseModel):
    set: Optional["users_set_input"] = Field(alias="_set", default=None)
    where: "users_bool_exp"


class uuid_comparison_exp(BaseModel):
    eq: Optional[Any] = Field(alias="_eq", default=None)
    gt: Optional[Any] = Field(alias="_gt", default=None)
    gte: Optional[Any] = Field(alias="_gte", default=None)
    in_: Optional[List[Any]] = Field(alias="_in", default=None)
    is_null: Optional[bool] = Field(alias="_is_null", default=None)
    lt: Optional[Any] = Field(alias="_lt", default=None)
    lte: Optional[Any] = Field(alias="_lte", default=None)
    neq: Optional[Any] = Field(alias="_neq", default=None)
    nin: Optional[List[Any]] = Field(alias="_nin", default=None)


class versions_aggregate_bool_exp(BaseModel):
    count: Optional["versions_aggregate_bool_exp_count"] = None


class versions_aggregate_bool_exp_count(BaseModel):
    arguments: Optional[List[versions_select_column]] = None
    distinct: Optional[bool] = None
    filter: Optional["versions_bool_exp"] = None
    predicate: "Int_comparison_exp"


class versions_aggregate_order_by(BaseModel):
    count: Optional[order_by] = None
    max: Optional["versions_max_order_by"] = None
    min: Optional["versions_min_order_by"] = None


class versions_arr_rel_insert_input(BaseModel):
    data: List["versions_insert_input"]
    on_conflict: Optional["versions_on_conflict"] = None


class versions_bool_exp(BaseModel):
    and_: Optional[List["versions_bool_exp"]] = Field(alias="_and", default=None)
    not_: Optional["versions_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["versions_bool_exp"]] = Field(alias="_or", default=None)
    branch: Optional["branches_bool_exp"] = None
    branch_id: Optional["uuid_comparison_exp"] = None
    checksum: Optional["String_comparison_exp"] = None
    created_at: Optional["timestamptz_comparison_exp"] = None
    dataschemas: Optional["dataschemas_bool_exp"] = None
    dataschemas_aggregate: Optional["dataschemas_aggregate_bool_exp"] = None
    id: Optional["uuid_comparison_exp"] = None
    markdown_doc: Optional["String_comparison_exp"] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None
    user: Optional["users_bool_exp"] = None
    user_id: Optional["uuid_comparison_exp"] = None


class versions_insert_input(BaseModel):
    branch: Optional["branches_obj_rel_insert_input"] = None
    branch_id: Optional[Any] = None
    checksum: Optional[str] = None
    created_at: Optional[Any] = None
    dataschemas: Optional["dataschemas_arr_rel_insert_input"] = None
    id: Optional[Any] = None
    markdown_doc: Optional[str] = None
    updated_at: Optional[Any] = None
    user: Optional["users_obj_rel_insert_input"] = None
    user_id: Optional[Any] = None


class versions_max_order_by(BaseModel):
    branch_id: Optional[order_by] = None
    checksum: Optional[order_by] = None
    created_at: Optional[order_by] = None
    id: Optional[order_by] = None
    markdown_doc: Optional[order_by] = None
    updated_at: Optional[order_by] = None
    user_id: Optional[order_by] = None


class versions_min_order_by(BaseModel):
    branch_id: Optional[order_by] = None
    checksum: Optional[order_by] = None
    created_at: Optional[order_by] = None
    id: Optional[order_by] = None
    markdown_doc: Optional[order_by] = None
    updated_at: Optional[order_by] = None
    user_id: Optional[order_by] = None


class versions_obj_rel_insert_input(BaseModel):
    data: "versions_insert_input"
    on_conflict: Optional["versions_on_conflict"] = None


class versions_on_conflict(BaseModel):
    constraint: versions_constraint
    update_columns: List[versions_update_column]
    where: Optional["versions_bool_exp"] = None


class versions_order_by(BaseModel):
    branch: Optional["branches_order_by"] = None
    branch_id: Optional[order_by] = None
    checksum: Optional[order_by] = None
    created_at: Optional[order_by] = None
    dataschemas_aggregate: Optional["dataschemas_aggregate_order_by"] = None
    id: Optional[order_by] = None
    markdown_doc: Optional[order_by] = None
    updated_at: Optional[order_by] = None
    user: Optional["users_order_by"] = None
    user_id: Optional[order_by] = None


class versions_pk_columns_input(BaseModel):
    id: Any


class versions_set_input(BaseModel):
    branch_id: Optional[Any] = None
    checksum: Optional[str] = None
    created_at: Optional[Any] = None
    id: Optional[Any] = None
    markdown_doc: Optional[str] = None
    updated_at: Optional[Any] = None
    user_id: Optional[Any] = None


class versions_stream_cursor_input(BaseModel):
    initial_value: "versions_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class versions_stream_cursor_value_input(BaseModel):
    branch_id: Optional[Any] = None
    checksum: Optional[str] = None
    created_at: Optional[Any] = None
    id: Optional[Any] = None
    markdown_doc: Optional[str] = None
    updated_at: Optional[Any] = None
    user_id: Optional[Any] = None


class versions_updates(BaseModel):
    set: Optional["versions_set_input"] = Field(alias="_set", default=None)
    where: "versions_bool_exp"


access_lists_aggregate_bool_exp.model_rebuild()
access_lists_aggregate_bool_exp_count.model_rebuild()
access_lists_aggregate_order_by.model_rebuild()
access_lists_arr_rel_insert_input.model_rebuild()
access_lists_bool_exp.model_rebuild()
access_lists_insert_input.model_rebuild()
access_lists_obj_rel_insert_input.model_rebuild()
access_lists_on_conflict.model_rebuild()
access_lists_order_by.model_rebuild()
access_lists_stream_cursor_input.model_rebuild()
access_lists_updates.model_rebuild()
alerts_aggregate_bool_exp.model_rebuild()
alerts_aggregate_bool_exp_count.model_rebuild()
alerts_aggregate_order_by.model_rebuild()
alerts_arr_rel_insert_input.model_rebuild()
alerts_bool_exp.model_rebuild()
alerts_insert_input.model_rebuild()
alerts_on_conflict.model_rebuild()
alerts_order_by.model_rebuild()
alerts_stream_cursor_input.model_rebuild()
alerts_updates.model_rebuild()
auth_account_providers_aggregate_bool_exp.model_rebuild()
auth_account_providers_aggregate_bool_exp_count.model_rebuild()
auth_account_providers_aggregate_order_by.model_rebuild()
auth_account_providers_arr_rel_insert_input.model_rebuild()
auth_account_providers_bool_exp.model_rebuild()
auth_account_providers_insert_input.model_rebuild()
auth_account_providers_on_conflict.model_rebuild()
auth_account_providers_order_by.model_rebuild()
auth_account_providers_stream_cursor_input.model_rebuild()
auth_account_providers_updates.model_rebuild()
auth_account_roles_aggregate_bool_exp.model_rebuild()
auth_account_roles_aggregate_bool_exp_count.model_rebuild()
auth_account_roles_aggregate_order_by.model_rebuild()
auth_account_roles_arr_rel_insert_input.model_rebuild()
auth_account_roles_bool_exp.model_rebuild()
auth_account_roles_insert_input.model_rebuild()
auth_account_roles_on_conflict.model_rebuild()
auth_account_roles_order_by.model_rebuild()
auth_account_roles_stream_cursor_input.model_rebuild()
auth_account_roles_updates.model_rebuild()
auth_accounts_aggregate_bool_exp.model_rebuild()
auth_accounts_aggregate_bool_exp_bool_and.model_rebuild()
auth_accounts_aggregate_bool_exp_bool_or.model_rebuild()
auth_accounts_aggregate_bool_exp_count.model_rebuild()
auth_accounts_aggregate_order_by.model_rebuild()
auth_accounts_arr_rel_insert_input.model_rebuild()
auth_accounts_bool_exp.model_rebuild()
auth_accounts_insert_input.model_rebuild()
auth_accounts_obj_rel_insert_input.model_rebuild()
auth_accounts_on_conflict.model_rebuild()
auth_accounts_order_by.model_rebuild()
auth_accounts_stream_cursor_input.model_rebuild()
auth_accounts_updates.model_rebuild()
auth_providers_bool_exp.model_rebuild()
auth_providers_insert_input.model_rebuild()
auth_providers_obj_rel_insert_input.model_rebuild()
auth_providers_on_conflict.model_rebuild()
auth_providers_order_by.model_rebuild()
auth_providers_stream_cursor_input.model_rebuild()
auth_providers_updates.model_rebuild()
auth_refresh_tokens_aggregate_bool_exp.model_rebuild()
auth_refresh_tokens_aggregate_bool_exp_count.model_rebuild()
auth_refresh_tokens_aggregate_order_by.model_rebuild()
auth_refresh_tokens_arr_rel_insert_input.model_rebuild()
auth_refresh_tokens_bool_exp.model_rebuild()
auth_refresh_tokens_insert_input.model_rebuild()
auth_refresh_tokens_on_conflict.model_rebuild()
auth_refresh_tokens_order_by.model_rebuild()
auth_refresh_tokens_stream_cursor_input.model_rebuild()
auth_refresh_tokens_updates.model_rebuild()
auth_roles_bool_exp.model_rebuild()
auth_roles_insert_input.model_rebuild()
auth_roles_obj_rel_insert_input.model_rebuild()
auth_roles_on_conflict.model_rebuild()
auth_roles_order_by.model_rebuild()
auth_roles_stream_cursor_input.model_rebuild()
auth_roles_updates.model_rebuild()
branch_statuses_bool_exp.model_rebuild()
branch_statuses_obj_rel_insert_input.model_rebuild()
branch_statuses_on_conflict.model_rebuild()
branch_statuses_stream_cursor_input.model_rebuild()
branch_statuses_updates.model_rebuild()
branches_aggregate_bool_exp.model_rebuild()
branches_aggregate_bool_exp_count.model_rebuild()
branches_aggregate_order_by.model_rebuild()
branches_arr_rel_insert_input.model_rebuild()
branches_bool_exp.model_rebuild()
branches_insert_input.model_rebuild()
branches_obj_rel_insert_input.model_rebuild()
branches_on_conflict.model_rebuild()
branches_order_by.model_rebuild()
branches_stream_cursor_input.model_rebuild()
branches_updates.model_rebuild()
dashboards_aggregate_bool_exp.model_rebuild()
dashboards_aggregate_bool_exp_count.model_rebuild()
dashboards_aggregate_order_by.model_rebuild()
dashboards_arr_rel_insert_input.model_rebuild()
dashboards_bool_exp.model_rebuild()
dashboards_insert_input.model_rebuild()
dashboards_obj_rel_insert_input.model_rebuild()
dashboards_on_conflict.model_rebuild()
dashboards_order_by.model_rebuild()
dashboards_stream_cursor_input.model_rebuild()
dashboards_updates.model_rebuild()
dataschemas_aggregate_bool_exp.model_rebuild()
dataschemas_aggregate_bool_exp_count.model_rebuild()
dataschemas_aggregate_order_by.model_rebuild()
dataschemas_arr_rel_insert_input.model_rebuild()
dataschemas_bool_exp.model_rebuild()
dataschemas_insert_input.model_rebuild()
dataschemas_on_conflict.model_rebuild()
dataschemas_order_by.model_rebuild()
dataschemas_stream_cursor_input.model_rebuild()
dataschemas_updates.model_rebuild()
datasources_aggregate_bool_exp.model_rebuild()
datasources_aggregate_bool_exp_count.model_rebuild()
datasources_aggregate_order_by.model_rebuild()
datasources_arr_rel_insert_input.model_rebuild()
datasources_bool_exp.model_rebuild()
datasources_insert_input.model_rebuild()
datasources_obj_rel_insert_input.model_rebuild()
datasources_on_conflict.model_rebuild()
datasources_order_by.model_rebuild()
datasources_stream_cursor_input.model_rebuild()
datasources_updates.model_rebuild()
events_bool_exp.model_rebuild()
events_on_conflict.model_rebuild()
events_stream_cursor_input.model_rebuild()
events_updates.model_rebuild()
explorations_aggregate_bool_exp.model_rebuild()
explorations_aggregate_bool_exp_count.model_rebuild()
explorations_aggregate_order_by.model_rebuild()
explorations_arr_rel_insert_input.model_rebuild()
explorations_bool_exp.model_rebuild()
explorations_insert_input.model_rebuild()
explorations_obj_rel_insert_input.model_rebuild()
explorations_on_conflict.model_rebuild()
explorations_order_by.model_rebuild()
explorations_stream_cursor_input.model_rebuild()
explorations_updates.model_rebuild()
jsonb_cast_exp.model_rebuild()
jsonb_comparison_exp.model_rebuild()
member_roles_aggregate_bool_exp.model_rebuild()
member_roles_aggregate_bool_exp_count.model_rebuild()
member_roles_aggregate_order_by.model_rebuild()
member_roles_arr_rel_insert_input.model_rebuild()
member_roles_bool_exp.model_rebuild()
member_roles_insert_input.model_rebuild()
member_roles_on_conflict.model_rebuild()
member_roles_order_by.model_rebuild()
member_roles_stream_cursor_input.model_rebuild()
member_roles_updates.model_rebuild()
members_aggregate_bool_exp.model_rebuild()
members_aggregate_bool_exp_count.model_rebuild()
members_aggregate_order_by.model_rebuild()
members_arr_rel_insert_input.model_rebuild()
members_bool_exp.model_rebuild()
members_insert_input.model_rebuild()
members_obj_rel_insert_input.model_rebuild()
members_on_conflict.model_rebuild()
members_order_by.model_rebuild()
members_stream_cursor_input.model_rebuild()
members_updates.model_rebuild()
pinned_items_aggregate_bool_exp.model_rebuild()
pinned_items_aggregate_bool_exp_count.model_rebuild()
pinned_items_aggregate_order_by.model_rebuild()
pinned_items_arr_rel_insert_input.model_rebuild()
pinned_items_bool_exp.model_rebuild()
pinned_items_insert_input.model_rebuild()
pinned_items_on_conflict.model_rebuild()
pinned_items_order_by.model_rebuild()
pinned_items_stream_cursor_input.model_rebuild()
pinned_items_updates.model_rebuild()
reports_aggregate_bool_exp.model_rebuild()
reports_aggregate_bool_exp_count.model_rebuild()
reports_aggregate_order_by.model_rebuild()
reports_arr_rel_insert_input.model_rebuild()
reports_bool_exp.model_rebuild()
reports_insert_input.model_rebuild()
reports_on_conflict.model_rebuild()
reports_order_by.model_rebuild()
reports_stream_cursor_input.model_rebuild()
reports_updates.model_rebuild()
request_event_logs_aggregate_bool_exp.model_rebuild()
request_event_logs_aggregate_bool_exp_count.model_rebuild()
request_event_logs_aggregate_order_by.model_rebuild()
request_event_logs_arr_rel_insert_input.model_rebuild()
request_event_logs_bool_exp.model_rebuild()
request_event_logs_insert_input.model_rebuild()
request_event_logs_on_conflict.model_rebuild()
request_event_logs_order_by.model_rebuild()
request_event_logs_stream_cursor_input.model_rebuild()
request_event_logs_updates.model_rebuild()
request_logs_aggregate_bool_exp.model_rebuild()
request_logs_aggregate_bool_exp_count.model_rebuild()
request_logs_aggregate_order_by.model_rebuild()
request_logs_arr_rel_insert_input.model_rebuild()
request_logs_bool_exp.model_rebuild()
request_logs_insert_input.model_rebuild()
request_logs_obj_rel_insert_input.model_rebuild()
request_logs_on_conflict.model_rebuild()
request_logs_order_by.model_rebuild()
request_logs_stream_cursor_input.model_rebuild()
request_logs_updates.model_rebuild()
sql_credentials_aggregate_bool_exp.model_rebuild()
sql_credentials_aggregate_bool_exp_count.model_rebuild()
sql_credentials_aggregate_order_by.model_rebuild()
sql_credentials_arr_rel_insert_input.model_rebuild()
sql_credentials_bool_exp.model_rebuild()
sql_credentials_insert_input.model_rebuild()
sql_credentials_on_conflict.model_rebuild()
sql_credentials_order_by.model_rebuild()
sql_credentials_stream_cursor_input.model_rebuild()
sql_credentials_updates.model_rebuild()
team_roles_bool_exp.model_rebuild()
team_roles_insert_input.model_rebuild()
team_roles_obj_rel_insert_input.model_rebuild()
team_roles_on_conflict.model_rebuild()
team_roles_order_by.model_rebuild()
team_roles_stream_cursor_input.model_rebuild()
team_roles_updates.model_rebuild()
teams_aggregate_bool_exp.model_rebuild()
teams_aggregate_bool_exp_count.model_rebuild()
teams_aggregate_order_by.model_rebuild()
teams_arr_rel_insert_input.model_rebuild()
teams_bool_exp.model_rebuild()
teams_insert_input.model_rebuild()
teams_obj_rel_insert_input.model_rebuild()
teams_on_conflict.model_rebuild()
teams_order_by.model_rebuild()
teams_stream_cursor_input.model_rebuild()
teams_updates.model_rebuild()
users_bool_exp.model_rebuild()
users_insert_input.model_rebuild()
users_obj_rel_insert_input.model_rebuild()
users_on_conflict.model_rebuild()
users_order_by.model_rebuild()
users_stream_cursor_input.model_rebuild()
users_updates.model_rebuild()
versions_aggregate_bool_exp.model_rebuild()
versions_aggregate_bool_exp_count.model_rebuild()
versions_aggregate_order_by.model_rebuild()
versions_arr_rel_insert_input.model_rebuild()
versions_bool_exp.model_rebuild()
versions_insert_input.model_rebuild()
versions_obj_rel_insert_input.model_rebuild()
versions_on_conflict.model_rebuild()
versions_order_by.model_rebuild()
versions_stream_cursor_input.model_rebuild()
versions_updates.model_rebuild()
